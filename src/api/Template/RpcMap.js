import * as RpcSDKManageActivityActive from './RpcSDKManageActivityActive';
import * as RpcSDKManageActivityActiveCardAdd from './RpcSDKManageActivityActiveCardAdd';
import * as RpcSDKManageActivityActiveCardModify from './RpcSDKManageActivityActiveCardModify';
import * as RpcSDKManageActivityActiveCardQuery from './RpcSDKManageActivityActiveCardQuery';
import * as RpcSDKManageActivityDelete from './RpcSDKManageActivityDelete';
import * as RpcSDKManageActivityInvalid from './RpcSDKManageActivityInvalid';
import * as RpcSDKManageActivityRechargeRebateAdd from './RpcSDKManageActivityRechargeRebateAdd';
import * as RpcSDKManageActivityRechargeRebateModify from './RpcSDKManageActivityRechargeRebateModify';
import * as RpcSDKManageActivityRechargeRebateQuery from './RpcSDKManageActivityRechargeRebateQuery';
import * as RpcSDKManageAuthLogout from './RpcSDKManageAuthLogout';
import * as RpcSDKManageCardTypeAdd from './RpcSDKManageCardTypeAdd';
import * as RpcSDKManageCardTypeDelete from './RpcSDKManageCardTypeDelete';
import * as RpcSDKManageCardTypeModify from './RpcSDKManageCardTypeModify';
import * as RpcSDKManageCardTypeQuery from './RpcSDKManageCardTypeQuery';
import * as RpcSDKManageDiscountMerchantAdd from './RpcSDKManageDiscountMerchantAdd';
import * as RpcSDKManageDiscountMerchantModify from './RpcSDKManageDiscountMerchantModify';
import * as RpcSDKManageDiscountMerchantQuery from './RpcSDKManageDiscountMerchantQuery';
import * as RpcSDKManageDiscountPaymentAdd from './RpcSDKManageDiscountPaymentAdd';
import * as RpcSDKManageDiscountPaymentModify from './RpcSDKManageDiscountPaymentModify';
import * as RpcSDKManageDiscountPaymentQuery from './RpcSDKManageDiscountPaymentQuery';
import * as RpcSDKManageDiscountQueryByMerchant from './RpcSDKManageDiscountQueryByMerchant';
import * as RpcSDKManageFactorageConsumptionModify from './RpcSDKManageFactorageConsumptionModify';
import * as RpcSDKManageFactorageConsumptionQuery from './RpcSDKManageFactorageConsumptionQuery';
import * as RpcSDKManageFactorageQueryByMerchant from './RpcSDKManageFactorageQueryByMerchant';
import * as RpcSDKManageFactorageRechargeModify from './RpcSDKManageFactorageRechargeModify';
import * as RpcSDKManageFactorageRechargeQuery from './RpcSDKManageFactorageRechargeQuery';
import * as RpcSDKManageFactorageThirdPartyModify from './RpcSDKManageFactorageThirdPartyModify';
import * as RpcSDKManageFactorageThirdPartyQuery from './RpcSDKManageFactorageThirdPartyQuery';
import * as RpcSDKManageFinancePointsMakeUpMiniPoints from './RpcSDKManageFinancePointsMakeUpMiniPoints';
import * as RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount from './RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount';
import * as RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard from './RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard';
import * as RpcSDKManageFinanceProfitSharingModify from './RpcSDKManageFinanceProfitSharingModify';
import * as RpcSDKManageFinanceProfitSharingQuery from './RpcSDKManageFinanceProfitSharingQuery';
import * as RpcSDKManageLogin from './RpcSDKManageLogin';
import * as RpcSDKManageLoginWeiXinMerchant from './RpcSDKManageLoginWeiXinMerchant';
import * as RpcSDKManageLoginWithCellphoneVerifyCode from './RpcSDKManageLoginWithCellphoneVerifyCode';
import * as RpcSDKManageLoginWithRefreshToken from './RpcSDKManageLoginWithRefreshToken';
import * as RpcSDKManageLoginWithSecretKey from './RpcSDKManageLoginWithSecretKey';
import * as RpcSDKManageMemberFreeze from './RpcSDKManageMemberFreeze';
import * as RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount from './RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount';
import * as RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel from './RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel';
import * as RpcSDKManageMemberMerchantAccountQuery from './RpcSDKManageMemberMerchantAccountQuery';
import * as RpcSDKManageMemberModify from './RpcSDKManageMemberModify';
import * as RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus from './RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus';
import * as RpcSDKManageMemberPaymentModifyPayPwd from './RpcSDKManageMemberPaymentModifyPayPwd';
import * as RpcSDKManageMemberPaymentResetPayPassword from './RpcSDKManageMemberPaymentResetPayPassword';
import * as RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit from './RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit';
import * as RpcSDKManageMemberQuery from './RpcSDKManageMemberQuery';
import * as RpcSDKManageMemberQueryMemberDetail from './RpcSDKManageMemberQueryMemberDetail';
import * as RpcSDKManageMemberQueryMerchantMember from './RpcSDKManageMemberQueryMerchantMember';
import * as RpcSDKManageMemberRealNameCertification from './RpcSDKManageMemberRealNameCertification';
import * as RpcSDKManageMemberRegister from './RpcSDKManageMemberRegister';
import * as RpcSDKManageMemberRegisterMerchantMember from './RpcSDKManageMemberRegisterMerchantMember';
import * as RpcSDKManageMemberUnFreeze from './RpcSDKManageMemberUnFreeze';
import * as RpcSDKManageMerchantAdd from './RpcSDKManageMerchantAdd';
import * as RpcSDKManageMerchantChannelAdd from './RpcSDKManageMerchantChannelAdd';
import * as RpcSDKManageMerchantChannelModify from './RpcSDKManageMerchantChannelModify';
import * as RpcSDKManageMerchantChannelQuery from './RpcSDKManageMerchantChannelQuery';
import * as RpcSDKManageMerchantDelete from './RpcSDKManageMerchantDelete';
import * as RpcSDKManageMerchantFreeze from './RpcSDKManageMerchantFreeze';
import * as RpcSDKManageMerchantModify from './RpcSDKManageMerchantModify';
import * as RpcSDKManageMerchantPaymentIDAdd from './RpcSDKManageMerchantPaymentIDAdd';
import * as RpcSDKManageMerchantPaymentIDModify from './RpcSDKManageMerchantPaymentIDModify';
import * as RpcSDKManageMerchantQuery from './RpcSDKManageMerchantQuery';
import * as RpcSDKManageMerchantQueryMerchantDetail from './RpcSDKManageMerchantQueryMerchantDetail';
import * as RpcSDKManageMerchantQueryReview from './RpcSDKManageMerchantQueryReview';
import * as RpcSDKManageMerchantUnFreeze from './RpcSDKManageMerchantUnFreeze';
import * as RpcSDKManageMerchantPointsAdd from './RpcSDKManageMerchantPointsAdd';
import * as RpcSDKManageMerchantPointsDelete from './RpcSDKManageMerchantPointsDelete';
import * as RpcSDKManageMerchantPointsModify from './RpcSDKManageMerchantPointsModify';
import * as RpcSDKManageMerchantPointsQuery from './RpcSDKManageMerchantPointsQuery';
import * as RpcSDKManageMiniPayPlatformCreate from './RpcSDKManageMiniPayPlatformCreate';
import * as RpcSDKManageOrganizationAdd from './RpcSDKManageOrganizationAdd';
import * as RpcSDKManageOrganizationAddMerchant from './RpcSDKManageOrganizationAddMerchant';
import * as RpcSDKManageOrganizationDelete from './RpcSDKManageOrganizationDelete';
import * as RpcSDKManageOrganizationModify from './RpcSDKManageOrganizationModify';
import * as RpcSDKManageOrganizationModifyHeadquarter from './RpcSDKManageOrganizationModifyHeadquarter';
import * as RpcSDKManageOrganizationModifyMerchant from './RpcSDKManageOrganizationModifyMerchant';
import * as RpcSDKManageOrganizationQuery from './RpcSDKManageOrganizationQuery';
import * as RpcSDKManageOrganizationQueryDetail from './RpcSDKManageOrganizationQueryDetail';
import * as RpcSDKManageOrganizationRemoveMerchant from './RpcSDKManageOrganizationRemoveMerchant';
import * as RpcSDKManagePaymentAccountTransferAdd from './RpcSDKManagePaymentAccountTransferAdd';
import * as RpcSDKManagePaymentAccountTransferDelete from './RpcSDKManagePaymentAccountTransferDelete';
import * as RpcSDKManagePaymentAccountTransferModify from './RpcSDKManagePaymentAccountTransferModify';
import * as RpcSDKManagePaymentAuth20Add from './RpcSDKManagePaymentAuth20Add';
import * as RpcSDKManagePaymentAuth20Delete from './RpcSDKManagePaymentAuth20Delete';
import * as RpcSDKManagePaymentAuth20Modify from './RpcSDKManagePaymentAuth20Modify';
import * as RpcSDKManagePaymentNetPayAdd from './RpcSDKManagePaymentNetPayAdd';
import * as RpcSDKManagePaymentNetPayDelete from './RpcSDKManagePaymentNetPayDelete';
import * as RpcSDKManagePaymentNetPayModify from './RpcSDKManagePaymentNetPayModify';
import * as RpcSDKManagePaymentNoCardPayAdd from './RpcSDKManagePaymentNoCardPayAdd';
import * as RpcSDKManagePaymentNoCardPayDelete from './RpcSDKManagePaymentNoCardPayDelete';
import * as RpcSDKManagePaymentNoCardPayModify from './RpcSDKManagePaymentNoCardPayModify';
import * as RpcSDKManagePaymentOnlineRechargeAdd from './RpcSDKManagePaymentOnlineRechargeAdd';
import * as RpcSDKManagePaymentOnlineRechargeAddQuota from './RpcSDKManagePaymentOnlineRechargeAddQuota';
import * as RpcSDKManagePaymentOnlineRechargeDelete from './RpcSDKManagePaymentOnlineRechargeDelete';
import * as RpcSDKManagePaymentOnlineRechargeQueryChange from './RpcSDKManagePaymentOnlineRechargeQueryChange';
import * as RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction from './RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction';
import * as RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction from './RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction';
import * as RpcSDKManagePaymentPosAdd from './RpcSDKManagePaymentPosAdd';
import * as RpcSDKManagePaymentPosDelete from './RpcSDKManagePaymentPosDelete';
import * as RpcSDKManagePaymentPosDetail from './RpcSDKManagePaymentPosDetail';
import * as RpcSDKManagePaymentPosExport from './RpcSDKManagePaymentPosExport';
import * as RpcSDKManagePaymentPosModify from './RpcSDKManagePaymentPosModify';
import * as RpcSDKManagePaymentPosQuery from './RpcSDKManagePaymentPosQuery';
import * as RpcSDKManagePaymentQuery from './RpcSDKManagePaymentQuery';
import * as RpcSDKManagePermissionAdd from './RpcSDKManagePermissionAdd';
import * as RpcSDKManagePermissionDelete from './RpcSDKManagePermissionDelete';
import * as RpcSDKManagePermissionQuery from './RpcSDKManagePermissionQuery';
import * as RpcSDKManagePrePaidCardCardBinApplyEntityCardBin from './RpcSDKManagePrePaidCardCardBinApplyEntityCardBin';
import * as RpcSDKManagePrePaidCardCardBinQuery from './RpcSDKManagePrePaidCardCardBinQuery';
import * as RpcSDKManagePrePaidCardFabricationApply from './RpcSDKManagePrePaidCardFabricationApply';
import * as RpcSDKManagePrePaidCardFabricationDelete from './RpcSDKManagePrePaidCardFabricationDelete';
import * as RpcSDKManagePrePaidCardFabricationExport from './RpcSDKManagePrePaidCardFabricationExport';
import * as RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail from './RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail';
import * as RpcSDKManagePrePaidCardFabricationMake from './RpcSDKManagePrePaidCardFabricationMake';
import * as RpcSDKManagePrePaidCardFabricationQuery from './RpcSDKManagePrePaidCardFabricationQuery';
import * as RpcSDKManagePrePaidCardQuery from './RpcSDKManagePrePaidCardQuery';
import * as RpcSDKManagePrePaidCardTradeOnlineRechargeBatch from './RpcSDKManagePrePaidCardTradeOnlineRechargeBatch';
import * as RpcSDKManagePrePaidCardTradeOnlineRechargeSingle from './RpcSDKManagePrePaidCardTradeOnlineRechargeSingle';
import * as RpcSDKManagePrePaidCardTradeReDrawBatch from './RpcSDKManagePrePaidCardTradeReDrawBatch';
import * as RpcSDKManagePrePaidCardTradeReDrawSingle from './RpcSDKManagePrePaidCardTradeReDrawSingle';
import * as RpcSDKManagePrePaidCardTradeSellCard from './RpcSDKManagePrePaidCardTradeSellCard';
import * as RpcSDKManagePrePaidCardTradeSellCardByCellphone from './RpcSDKManagePrePaidCardTradeSellCardByCellphone';
import * as RpcSDKManagePrePaidCardTradeSellVirtualCard from './RpcSDKManagePrePaidCardTradeSellVirtualCard';
import * as RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone from './RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone';
import * as RpcSDKManagePrePaidCardTradeTransferAccount from './RpcSDKManagePrePaidCardTradeTransferAccount';
import * as RpcSDKManagePrePaidCardUsageActive from './RpcSDKManagePrePaidCardUsageActive';
import * as RpcSDKManagePrePaidCardUsageBindToMember from './RpcSDKManagePrePaidCardUsageBindToMember';
import * as RpcSDKManagePrePaidCardUsageDeActivate from './RpcSDKManagePrePaidCardUsageDeActivate';
import * as RpcSDKManagePrePaidCardUsageExportActiveCard from './RpcSDKManagePrePaidCardUsageExportActiveCard';
import * as RpcSDKManagePrePaidCardUsageFreeze from './RpcSDKManagePrePaidCardUsageFreeze';
import * as RpcSDKManagePrePaidCardUsageMakeUpCard from './RpcSDKManagePrePaidCardUsageMakeUpCard';
import * as RpcSDKManagePrePaidCardUsageModifyPassword from './RpcSDKManagePrePaidCardUsageModifyPassword';
import * as RpcSDKManagePrePaidCardUsageResetPassword from './RpcSDKManagePrePaidCardUsageResetPassword';
import * as RpcSDKManagePrePaidCardUsageUnBind from './RpcSDKManagePrePaidCardUsageUnBind';
import * as RpcSDKManagePrePaidCardUsageUnFreeze from './RpcSDKManagePrePaidCardUsageUnFreeze';
import * as RpcSDKManageProfitSharingSalesmanAdd from './RpcSDKManageProfitSharingSalesmanAdd';
import * as RpcSDKManageProfitSharingSalesmanDelete from './RpcSDKManageProfitSharingSalesmanDelete';
import * as RpcSDKManageProfitSharingSalesmanModify from './RpcSDKManageProfitSharingSalesmanModify';
import * as RpcSDKManageProfitSharingSalesmanQueryByMember from './RpcSDKManageProfitSharingSalesmanQueryByMember';
import * as RpcSDKManageProfitSharingSalesmanQueryByMerchant from './RpcSDKManageProfitSharingSalesmanQueryByMerchant';
import * as RpcSDKManageRequestVerify from './RpcSDKManageRequestVerify';
import * as RpcSDKManageReviewActivityQuery from './RpcSDKManageReviewActivityQuery';
import * as RpcSDKManageReviewDelete from './RpcSDKManageReviewDelete';
import * as RpcSDKManageReviewFabricationCardQuery from './RpcSDKManageReviewFabricationCardQuery';
import * as RpcSDKManageReviewFactorageQuery from './RpcSDKManageReviewFactorageQuery';
import * as RpcSDKManageReviewModify from './RpcSDKManageReviewModify';
import * as RpcSDKManageReviewPaymentProductQuery from './RpcSDKManageReviewPaymentProductQuery';
import * as RpcSDKManageReviewPermissionAdd from './RpcSDKManageReviewPermissionAdd';
import * as RpcSDKManageReviewPermissionDelete from './RpcSDKManageReviewPermissionDelete';
import * as RpcSDKManageReviewPermissionFreeze from './RpcSDKManageReviewPermissionFreeze';
import * as RpcSDKManageReviewPermissionQuery from './RpcSDKManageReviewPermissionQuery';
import * as RpcSDKManageReviewPermissionUnFreeze from './RpcSDKManageReviewPermissionUnFreeze';
import * as RpcSDKManageReviewQueryCenterReview from './RpcSDKManageReviewQueryCenterReview';
import * as RpcSDKManageReviewQuerySDKManageReview from './RpcSDKManageReviewQuerySDKManageReview';
import * as RpcSDKManageReviewReview from './RpcSDKManageReviewReview';
import * as RpcSDKManageSmsRequestLoginVerifyCodeWithUserName from './RpcSDKManageSmsRequestLoginVerifyCodeWithUserName';
import * as RpcSDKManageSmsRequestVerify from './RpcSDKManageSmsRequestVerify';
import * as RpcSDKManageSystemAlarmDelete from './RpcSDKManageSystemAlarmDelete';
import * as RpcSDKManageSystemAlarmDetail from './RpcSDKManageSystemAlarmDetail';
import * as RpcSDKManageSystemAlarmModify from './RpcSDKManageSystemAlarmModify';
import * as RpcSDKManageSystemAlarmQuery from './RpcSDKManageSystemAlarmQuery';
import * as RpcSDKManageSystemMessageDelete from './RpcSDKManageSystemMessageDelete';
import * as RpcSDKManageSystemMessageMark from './RpcSDKManageSystemMessageMark';
import * as RpcSDKManageSystemMessageQuery from './RpcSDKManageSystemMessageQuery';
import * as RpcSDKManageSystemMessageSend from './RpcSDKManageSystemMessageSend';
import * as RpcSDKManageSystemNoticeAdd from './RpcSDKManageSystemNoticeAdd';
import * as RpcSDKManageSystemNoticeDelete from './RpcSDKManageSystemNoticeDelete';
import * as RpcSDKManageSystemNoticeModify from './RpcSDKManageSystemNoticeModify';
import * as RpcSDKManageSystemNoticeQuery from './RpcSDKManageSystemNoticeQuery';
import * as RpcSDKManageTokenGetAccessToken from './RpcSDKManageTokenGetAccessToken';
import * as RpcSDKManageTokenGetRefreshToken from './RpcSDKManageTokenGetRefreshToken';
import * as RpcSDKManageTransactionConsumptionExport from './RpcSDKManageTransactionConsumptionExport';
import * as RpcSDKManageTransactionMakeUpPosMachineRecharge from './RpcSDKManageTransactionMakeUpPosMachineRecharge';
import * as RpcSDKManageTransactionQuery from './RpcSDKManageTransactionQuery';
import * as RpcSDKManageTransactionRechargeReconcilation from './RpcSDKManageTransactionRechargeReconcilation';
import * as RpcSDKManageUserAdd from './RpcSDKManageUserAdd';
import * as RpcSDKManageUserAddPermission from './RpcSDKManageUserAddPermission';
import * as RpcSDKManageUserDelete from './RpcSDKManageUserDelete';
import * as RpcSDKManageUserDeletePermission from './RpcSDKManageUserDeletePermission';
import * as RpcSDKManageUserFreeze from './RpcSDKManageUserFreeze';
import * as RpcSDKManageUserGetPermission from './RpcSDKManageUserGetPermission';
import * as RpcSDKManageUserModifyPassword from './RpcSDKManageUserModifyPassword';
import * as RpcSDKManageUserQuery from './RpcSDKManageUserQuery';
import * as RpcSDKManageUserResetLoginPasswordWithSms from './RpcSDKManageUserResetLoginPasswordWithSms';
import * as RpcSDKManageUserUnFreeze from './RpcSDKManageUserUnFreeze';

const rpc = {
  RpcSDKManageActivityActive: RpcSDKManageActivityActive.RpcSDKManageActivityActive,
  RpcSDKManageActivityActiveCardAdd: RpcSDKManageActivityActiveCardAdd.RpcSDKManageActivityActiveCardAdd,
  RpcSDKManageActivityActiveCardModify: RpcSDKManageActivityActiveCardModify.RpcSDKManageActivityActiveCardModify,
  RpcSDKManageActivityActiveCardQuery: RpcSDKManageActivityActiveCardQuery.RpcSDKManageActivityActiveCardQuery,
  RpcSDKManageActivityDelete: RpcSDKManageActivityDelete.RpcSDKManageActivityDelete,
  RpcSDKManageActivityInvalid: RpcSDKManageActivityInvalid.RpcSDKManageActivityInvalid,
  RpcSDKManageActivityRechargeRebateAdd: RpcSDKManageActivityRechargeRebateAdd.RpcSDKManageActivityRechargeRebateAdd,
  RpcSDKManageActivityRechargeRebateModify: RpcSDKManageActivityRechargeRebateModify.RpcSDKManageActivityRechargeRebateModify,
  RpcSDKManageActivityRechargeRebateQuery: RpcSDKManageActivityRechargeRebateQuery.RpcSDKManageActivityRechargeRebateQuery,
  RpcSDKManageAuthLogout: RpcSDKManageAuthLogout.RpcSDKManageAuthLogout,
  RpcSDKManageCardTypeAdd: RpcSDKManageCardTypeAdd.RpcSDKManageCardTypeAdd,
  RpcSDKManageCardTypeDelete: RpcSDKManageCardTypeDelete.RpcSDKManageCardTypeDelete,
  RpcSDKManageCardTypeModify: RpcSDKManageCardTypeModify.RpcSDKManageCardTypeModify,
  RpcSDKManageCardTypeQuery: RpcSDKManageCardTypeQuery.RpcSDKManageCardTypeQuery,
  RpcSDKManageDiscountMerchantAdd: RpcSDKManageDiscountMerchantAdd.RpcSDKManageDiscountMerchantAdd,
  RpcSDKManageDiscountMerchantModify: RpcSDKManageDiscountMerchantModify.RpcSDKManageDiscountMerchantModify,
  RpcSDKManageDiscountMerchantQuery: RpcSDKManageDiscountMerchantQuery.RpcSDKManageDiscountMerchantQuery,
  RpcSDKManageDiscountPaymentAdd: RpcSDKManageDiscountPaymentAdd.RpcSDKManageDiscountPaymentAdd,
  RpcSDKManageDiscountPaymentModify: RpcSDKManageDiscountPaymentModify.RpcSDKManageDiscountPaymentModify,
  RpcSDKManageDiscountPaymentQuery: RpcSDKManageDiscountPaymentQuery.RpcSDKManageDiscountPaymentQuery,
  RpcSDKManageDiscountQueryByMerchant: RpcSDKManageDiscountQueryByMerchant.RpcSDKManageDiscountQueryByMerchant,
  RpcSDKManageFactorageConsumptionModify: RpcSDKManageFactorageConsumptionModify.RpcSDKManageFactorageConsumptionModify,
  RpcSDKManageFactorageConsumptionQuery: RpcSDKManageFactorageConsumptionQuery.RpcSDKManageFactorageConsumptionQuery,
  RpcSDKManageFactorageQueryByMerchant: RpcSDKManageFactorageQueryByMerchant.RpcSDKManageFactorageQueryByMerchant,
  RpcSDKManageFactorageRechargeModify: RpcSDKManageFactorageRechargeModify.RpcSDKManageFactorageRechargeModify,
  RpcSDKManageFactorageRechargeQuery: RpcSDKManageFactorageRechargeQuery.RpcSDKManageFactorageRechargeQuery,
  RpcSDKManageFactorageThirdPartyModify: RpcSDKManageFactorageThirdPartyModify.RpcSDKManageFactorageThirdPartyModify,
  RpcSDKManageFactorageThirdPartyQuery: RpcSDKManageFactorageThirdPartyQuery.RpcSDKManageFactorageThirdPartyQuery,
  RpcSDKManageFinancePointsMakeUpMiniPoints: RpcSDKManageFinancePointsMakeUpMiniPoints.RpcSDKManageFinancePointsMakeUpMiniPoints,
  RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount: RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount.RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount,
  RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard: RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard.RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard,
  RpcSDKManageFinanceProfitSharingModify: RpcSDKManageFinanceProfitSharingModify.RpcSDKManageFinanceProfitSharingModify,
  RpcSDKManageFinanceProfitSharingQuery: RpcSDKManageFinanceProfitSharingQuery.RpcSDKManageFinanceProfitSharingQuery,
  RpcSDKManageLogin: RpcSDKManageLogin.RpcSDKManageLogin,
  RpcSDKManageLoginWeiXinMerchant: RpcSDKManageLoginWeiXinMerchant.RpcSDKManageLoginWeiXinMerchant,
  RpcSDKManageLoginWithCellphoneVerifyCode: RpcSDKManageLoginWithCellphoneVerifyCode.RpcSDKManageLoginWithCellphoneVerifyCode,
  RpcSDKManageLoginWithRefreshToken: RpcSDKManageLoginWithRefreshToken.RpcSDKManageLoginWithRefreshToken,
  RpcSDKManageLoginWithSecretKey: RpcSDKManageLoginWithSecretKey.RpcSDKManageLoginWithSecretKey,
  RpcSDKManageMemberFreeze: RpcSDKManageMemberFreeze.RpcSDKManageMemberFreeze,
  RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount: RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount.RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount,
  RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel: RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel.RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel,
  RpcSDKManageMemberMerchantAccountQuery: RpcSDKManageMemberMerchantAccountQuery.RpcSDKManageMemberMerchantAccountQuery,
  RpcSDKManageMemberModify: RpcSDKManageMemberModify.RpcSDKManageMemberModify,
  RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus: RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus.RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus,
  RpcSDKManageMemberPaymentModifyPayPwd: RpcSDKManageMemberPaymentModifyPayPwd.RpcSDKManageMemberPaymentModifyPayPwd,
  RpcSDKManageMemberPaymentResetPayPassword: RpcSDKManageMemberPaymentResetPayPassword.RpcSDKManageMemberPaymentResetPayPassword,
  RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit: RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit.RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit,
  RpcSDKManageMemberQuery: RpcSDKManageMemberQuery.RpcSDKManageMemberQuery,
  RpcSDKManageMemberQueryMemberDetail: RpcSDKManageMemberQueryMemberDetail.RpcSDKManageMemberQueryMemberDetail,
  RpcSDKManageMemberQueryMerchantMember: RpcSDKManageMemberQueryMerchantMember.RpcSDKManageMemberQueryMerchantMember,
  RpcSDKManageMemberRealNameCertification: RpcSDKManageMemberRealNameCertification.RpcSDKManageMemberRealNameCertification,
  RpcSDKManageMemberRegister: RpcSDKManageMemberRegister.RpcSDKManageMemberRegister,
  RpcSDKManageMemberRegisterMerchantMember: RpcSDKManageMemberRegisterMerchantMember.RpcSDKManageMemberRegisterMerchantMember,
  RpcSDKManageMemberUnFreeze: RpcSDKManageMemberUnFreeze.RpcSDKManageMemberUnFreeze,
  RpcSDKManageMerchantAdd: RpcSDKManageMerchantAdd.RpcSDKManageMerchantAdd,
  RpcSDKManageMerchantChannelAdd: RpcSDKManageMerchantChannelAdd.RpcSDKManageMerchantChannelAdd,
  RpcSDKManageMerchantChannelModify: RpcSDKManageMerchantChannelModify.RpcSDKManageMerchantChannelModify,
  RpcSDKManageMerchantChannelQuery: RpcSDKManageMerchantChannelQuery.RpcSDKManageMerchantChannelQuery,
  RpcSDKManageMerchantDelete: RpcSDKManageMerchantDelete.RpcSDKManageMerchantDelete,
  RpcSDKManageMerchantFreeze: RpcSDKManageMerchantFreeze.RpcSDKManageMerchantFreeze,
  RpcSDKManageMerchantModify: RpcSDKManageMerchantModify.RpcSDKManageMerchantModify,
  RpcSDKManageMerchantPaymentIDAdd: RpcSDKManageMerchantPaymentIDAdd.RpcSDKManageMerchantPaymentIDAdd,
  RpcSDKManageMerchantPaymentIDModify: RpcSDKManageMerchantPaymentIDModify.RpcSDKManageMerchantPaymentIDModify,
  RpcSDKManageMerchantQuery: RpcSDKManageMerchantQuery.RpcSDKManageMerchantQuery,
  RpcSDKManageMerchantQueryMerchantDetail: RpcSDKManageMerchantQueryMerchantDetail.RpcSDKManageMerchantQueryMerchantDetail,
  RpcSDKManageMerchantQueryReview: RpcSDKManageMerchantQueryReview.RpcSDKManageMerchantQueryReview,
  RpcSDKManageMerchantUnFreeze: RpcSDKManageMerchantUnFreeze.RpcSDKManageMerchantUnFreeze,
  RpcSDKManageMerchantPointsAdd: RpcSDKManageMerchantPointsAdd.RpcSDKManageMerchantPointsAdd,
  RpcSDKManageMerchantPointsDelete: RpcSDKManageMerchantPointsDelete.RpcSDKManageMerchantPointsDelete,
  RpcSDKManageMerchantPointsModify: RpcSDKManageMerchantPointsModify.RpcSDKManageMerchantPointsModify,
  RpcSDKManageMerchantPointsQuery: RpcSDKManageMerchantPointsQuery.RpcSDKManageMerchantPointsQuery,
  RpcSDKManageMiniPayPlatformCreate: RpcSDKManageMiniPayPlatformCreate.RpcSDKManageMiniPayPlatformCreate,
  RpcSDKManageOrganizationAdd: RpcSDKManageOrganizationAdd.RpcSDKManageOrganizationAdd,
  RpcSDKManageOrganizationAddMerchant: RpcSDKManageOrganizationAddMerchant.RpcSDKManageOrganizationAddMerchant,
  RpcSDKManageOrganizationDelete: RpcSDKManageOrganizationDelete.RpcSDKManageOrganizationDelete,
  RpcSDKManageOrganizationModify: RpcSDKManageOrganizationModify.RpcSDKManageOrganizationModify,
  RpcSDKManageOrganizationModifyHeadquarter: RpcSDKManageOrganizationModifyHeadquarter.RpcSDKManageOrganizationModifyHeadquarter,
  RpcSDKManageOrganizationModifyMerchant: RpcSDKManageOrganizationModifyMerchant.RpcSDKManageOrganizationModifyMerchant,
  RpcSDKManageOrganizationQuery: RpcSDKManageOrganizationQuery.RpcSDKManageOrganizationQuery,
  RpcSDKManageOrganizationQueryDetail: RpcSDKManageOrganizationQueryDetail.RpcSDKManageOrganizationQueryDetail,
  RpcSDKManageOrganizationRemoveMerchant: RpcSDKManageOrganizationRemoveMerchant.RpcSDKManageOrganizationRemoveMerchant,
  RpcSDKManagePaymentAccountTransferAdd: RpcSDKManagePaymentAccountTransferAdd.RpcSDKManagePaymentAccountTransferAdd,
  RpcSDKManagePaymentAccountTransferDelete: RpcSDKManagePaymentAccountTransferDelete.RpcSDKManagePaymentAccountTransferDelete,
  RpcSDKManagePaymentAccountTransferModify: RpcSDKManagePaymentAccountTransferModify.RpcSDKManagePaymentAccountTransferModify,
  RpcSDKManagePaymentAuth20Add: RpcSDKManagePaymentAuth20Add.RpcSDKManagePaymentAuth20Add,
  RpcSDKManagePaymentAuth20Delete: RpcSDKManagePaymentAuth20Delete.RpcSDKManagePaymentAuth20Delete,
  RpcSDKManagePaymentAuth20Modify: RpcSDKManagePaymentAuth20Modify.RpcSDKManagePaymentAuth20Modify,
  RpcSDKManagePaymentNetPayAdd: RpcSDKManagePaymentNetPayAdd.RpcSDKManagePaymentNetPayAdd,
  RpcSDKManagePaymentNetPayDelete: RpcSDKManagePaymentNetPayDelete.RpcSDKManagePaymentNetPayDelete,
  RpcSDKManagePaymentNetPayModify: RpcSDKManagePaymentNetPayModify.RpcSDKManagePaymentNetPayModify,
  RpcSDKManagePaymentNoCardPayAdd: RpcSDKManagePaymentNoCardPayAdd.RpcSDKManagePaymentNoCardPayAdd,
  RpcSDKManagePaymentNoCardPayDelete: RpcSDKManagePaymentNoCardPayDelete.RpcSDKManagePaymentNoCardPayDelete,
  RpcSDKManagePaymentNoCardPayModify: RpcSDKManagePaymentNoCardPayModify.RpcSDKManagePaymentNoCardPayModify,
  RpcSDKManagePaymentOnlineRechargeAdd: RpcSDKManagePaymentOnlineRechargeAdd.RpcSDKManagePaymentOnlineRechargeAdd,
  RpcSDKManagePaymentOnlineRechargeAddQuota: RpcSDKManagePaymentOnlineRechargeAddQuota.RpcSDKManagePaymentOnlineRechargeAddQuota,
  RpcSDKManagePaymentOnlineRechargeDelete: RpcSDKManagePaymentOnlineRechargeDelete.RpcSDKManagePaymentOnlineRechargeDelete,
  RpcSDKManagePaymentOnlineRechargeQueryChange: RpcSDKManagePaymentOnlineRechargeQueryChange.RpcSDKManagePaymentOnlineRechargeQueryChange,
  RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction: RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction,
  RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction: RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction,
  RpcSDKManagePaymentPosAdd: RpcSDKManagePaymentPosAdd.RpcSDKManagePaymentPosAdd,
  RpcSDKManagePaymentPosDelete: RpcSDKManagePaymentPosDelete.RpcSDKManagePaymentPosDelete,
  RpcSDKManagePaymentPosDetail: RpcSDKManagePaymentPosDetail.RpcSDKManagePaymentPosDetail,
  RpcSDKManagePaymentPosExport: RpcSDKManagePaymentPosExport.RpcSDKManagePaymentPosExport,
  RpcSDKManagePaymentPosModify: RpcSDKManagePaymentPosModify.RpcSDKManagePaymentPosModify,
  RpcSDKManagePaymentPosQuery: RpcSDKManagePaymentPosQuery.RpcSDKManagePaymentPosQuery,
  RpcSDKManagePaymentQuery: RpcSDKManagePaymentQuery.RpcSDKManagePaymentQuery,
  RpcSDKManagePermissionAdd: RpcSDKManagePermissionAdd.RpcSDKManagePermissionAdd,
  RpcSDKManagePermissionDelete: RpcSDKManagePermissionDelete.RpcSDKManagePermissionDelete,
  RpcSDKManagePermissionQuery: RpcSDKManagePermissionQuery.RpcSDKManagePermissionQuery,
  RpcSDKManagePrePaidCardCardBinApplyEntityCardBin: RpcSDKManagePrePaidCardCardBinApplyEntityCardBin.RpcSDKManagePrePaidCardCardBinApplyEntityCardBin,
  RpcSDKManagePrePaidCardCardBinQuery: RpcSDKManagePrePaidCardCardBinQuery.RpcSDKManagePrePaidCardCardBinQuery,
  RpcSDKManagePrePaidCardFabricationApply: RpcSDKManagePrePaidCardFabricationApply.RpcSDKManagePrePaidCardFabricationApply,
  RpcSDKManagePrePaidCardFabricationDelete: RpcSDKManagePrePaidCardFabricationDelete.RpcSDKManagePrePaidCardFabricationDelete,
  RpcSDKManagePrePaidCardFabricationExport: RpcSDKManagePrePaidCardFabricationExport.RpcSDKManagePrePaidCardFabricationExport,
  RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail: RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail.RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail,
  RpcSDKManagePrePaidCardFabricationMake: RpcSDKManagePrePaidCardFabricationMake.RpcSDKManagePrePaidCardFabricationMake,
  RpcSDKManagePrePaidCardFabricationQuery: RpcSDKManagePrePaidCardFabricationQuery.RpcSDKManagePrePaidCardFabricationQuery,
  RpcSDKManagePrePaidCardQuery: RpcSDKManagePrePaidCardQuery.RpcSDKManagePrePaidCardQuery,
  RpcSDKManagePrePaidCardTradeOnlineRechargeBatch: RpcSDKManagePrePaidCardTradeOnlineRechargeBatch.RpcSDKManagePrePaidCardTradeOnlineRechargeBatch,
  RpcSDKManagePrePaidCardTradeOnlineRechargeSingle: RpcSDKManagePrePaidCardTradeOnlineRechargeSingle.RpcSDKManagePrePaidCardTradeOnlineRechargeSingle,
  RpcSDKManagePrePaidCardTradeReDrawBatch: RpcSDKManagePrePaidCardTradeReDrawBatch.RpcSDKManagePrePaidCardTradeReDrawBatch,
  RpcSDKManagePrePaidCardTradeReDrawSingle: RpcSDKManagePrePaidCardTradeReDrawSingle.RpcSDKManagePrePaidCardTradeReDrawSingle,
  RpcSDKManagePrePaidCardTradeSellCard: RpcSDKManagePrePaidCardTradeSellCard.RpcSDKManagePrePaidCardTradeSellCard,
  RpcSDKManagePrePaidCardTradeSellCardByCellphone: RpcSDKManagePrePaidCardTradeSellCardByCellphone.RpcSDKManagePrePaidCardTradeSellCardByCellphone,
  RpcSDKManagePrePaidCardTradeSellVirtualCard: RpcSDKManagePrePaidCardTradeSellVirtualCard.RpcSDKManagePrePaidCardTradeSellVirtualCard,
  RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone: RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone.RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone,
  RpcSDKManagePrePaidCardTradeTransferAccount: RpcSDKManagePrePaidCardTradeTransferAccount.RpcSDKManagePrePaidCardTradeTransferAccount,
  RpcSDKManagePrePaidCardUsageActive: RpcSDKManagePrePaidCardUsageActive.RpcSDKManagePrePaidCardUsageActive,
  RpcSDKManagePrePaidCardUsageBindToMember: RpcSDKManagePrePaidCardUsageBindToMember.RpcSDKManagePrePaidCardUsageBindToMember,
  RpcSDKManagePrePaidCardUsageDeActivate: RpcSDKManagePrePaidCardUsageDeActivate.RpcSDKManagePrePaidCardUsageDeActivate,
  RpcSDKManagePrePaidCardUsageExportActiveCard: RpcSDKManagePrePaidCardUsageExportActiveCard.RpcSDKManagePrePaidCardUsageExportActiveCard,
  RpcSDKManagePrePaidCardUsageFreeze: RpcSDKManagePrePaidCardUsageFreeze.RpcSDKManagePrePaidCardUsageFreeze,
  RpcSDKManagePrePaidCardUsageMakeUpCard: RpcSDKManagePrePaidCardUsageMakeUpCard.RpcSDKManagePrePaidCardUsageMakeUpCard,
  RpcSDKManagePrePaidCardUsageModifyPassword: RpcSDKManagePrePaidCardUsageModifyPassword.RpcSDKManagePrePaidCardUsageModifyPassword,
  RpcSDKManagePrePaidCardUsageResetPassword: RpcSDKManagePrePaidCardUsageResetPassword.RpcSDKManagePrePaidCardUsageResetPassword,
  RpcSDKManagePrePaidCardUsageUnBind: RpcSDKManagePrePaidCardUsageUnBind.RpcSDKManagePrePaidCardUsageUnBind,
  RpcSDKManagePrePaidCardUsageUnFreeze: RpcSDKManagePrePaidCardUsageUnFreeze.RpcSDKManagePrePaidCardUsageUnFreeze,
  RpcSDKManageProfitSharingSalesmanAdd: RpcSDKManageProfitSharingSalesmanAdd.RpcSDKManageProfitSharingSalesmanAdd,
  RpcSDKManageProfitSharingSalesmanDelete: RpcSDKManageProfitSharingSalesmanDelete.RpcSDKManageProfitSharingSalesmanDelete,
  RpcSDKManageProfitSharingSalesmanModify: RpcSDKManageProfitSharingSalesmanModify.RpcSDKManageProfitSharingSalesmanModify,
  RpcSDKManageProfitSharingSalesmanQueryByMember: RpcSDKManageProfitSharingSalesmanQueryByMember.RpcSDKManageProfitSharingSalesmanQueryByMember,
  RpcSDKManageProfitSharingSalesmanQueryByMerchant: RpcSDKManageProfitSharingSalesmanQueryByMerchant.RpcSDKManageProfitSharingSalesmanQueryByMerchant,
  RpcSDKManageRequestVerify: RpcSDKManageRequestVerify.RpcSDKManageRequestVerify,
  RpcSDKManageReviewActivityQuery: RpcSDKManageReviewActivityQuery.RpcSDKManageReviewActivityQuery,
  RpcSDKManageReviewDelete: RpcSDKManageReviewDelete.RpcSDKManageReviewDelete,
  RpcSDKManageReviewFabricationCardQuery: RpcSDKManageReviewFabricationCardQuery.RpcSDKManageReviewFabricationCardQuery,
  RpcSDKManageReviewFactorageQuery: RpcSDKManageReviewFactorageQuery.RpcSDKManageReviewFactorageQuery,
  RpcSDKManageReviewModify: RpcSDKManageReviewModify.RpcSDKManageReviewModify,
  RpcSDKManageReviewPaymentProductQuery: RpcSDKManageReviewPaymentProductQuery.RpcSDKManageReviewPaymentProductQuery,
  RpcSDKManageReviewPermissionAdd: RpcSDKManageReviewPermissionAdd.RpcSDKManageReviewPermissionAdd,
  RpcSDKManageReviewPermissionDelete: RpcSDKManageReviewPermissionDelete.RpcSDKManageReviewPermissionDelete,
  RpcSDKManageReviewPermissionFreeze: RpcSDKManageReviewPermissionFreeze.RpcSDKManageReviewPermissionFreeze,
  RpcSDKManageReviewPermissionQuery: RpcSDKManageReviewPermissionQuery.RpcSDKManageReviewPermissionQuery,
  RpcSDKManageReviewPermissionUnFreeze: RpcSDKManageReviewPermissionUnFreeze.RpcSDKManageReviewPermissionUnFreeze,
  RpcSDKManageReviewQueryCenterReview: RpcSDKManageReviewQueryCenterReview.RpcSDKManageReviewQueryCenterReview,
  RpcSDKManageReviewQuerySDKManageReview: RpcSDKManageReviewQuerySDKManageReview.RpcSDKManageReviewQuerySDKManageReview,
  RpcSDKManageReviewReview: RpcSDKManageReviewReview.RpcSDKManageReviewReview,
  RpcSDKManageSmsRequestLoginVerifyCodeWithUserName: RpcSDKManageSmsRequestLoginVerifyCodeWithUserName.RpcSDKManageSmsRequestLoginVerifyCodeWithUserName,
  RpcSDKManageSmsRequestVerify: RpcSDKManageSmsRequestVerify.RpcSDKManageSmsRequestVerify,
  RpcSDKManageSystemAlarmDelete: RpcSDKManageSystemAlarmDelete.RpcSDKManageSystemAlarmDelete,
  RpcSDKManageSystemAlarmDetail: RpcSDKManageSystemAlarmDetail.RpcSDKManageSystemAlarmDetail,
  RpcSDKManageSystemAlarmModify: RpcSDKManageSystemAlarmModify.RpcSDKManageSystemAlarmModify,
  RpcSDKManageSystemAlarmQuery: RpcSDKManageSystemAlarmQuery.RpcSDKManageSystemAlarmQuery,
  RpcSDKManageSystemMessageDelete: RpcSDKManageSystemMessageDelete.RpcSDKManageSystemMessageDelete,
  RpcSDKManageSystemMessageMark: RpcSDKManageSystemMessageMark.RpcSDKManageSystemMessageMark,
  RpcSDKManageSystemMessageQuery: RpcSDKManageSystemMessageQuery.RpcSDKManageSystemMessageQuery,
  RpcSDKManageSystemMessageSend: RpcSDKManageSystemMessageSend.RpcSDKManageSystemMessageSend,
  RpcSDKManageSystemNoticeAdd: RpcSDKManageSystemNoticeAdd.RpcSDKManageSystemNoticeAdd,
  RpcSDKManageSystemNoticeDelete: RpcSDKManageSystemNoticeDelete.RpcSDKManageSystemNoticeDelete,
  RpcSDKManageSystemNoticeModify: RpcSDKManageSystemNoticeModify.RpcSDKManageSystemNoticeModify,
  RpcSDKManageSystemNoticeQuery: RpcSDKManageSystemNoticeQuery.RpcSDKManageSystemNoticeQuery,
  RpcSDKManageTokenGetAccessToken: RpcSDKManageTokenGetAccessToken.RpcSDKManageTokenGetAccessToken,
  RpcSDKManageTokenGetRefreshToken: RpcSDKManageTokenGetRefreshToken.RpcSDKManageTokenGetRefreshToken,
  RpcSDKManageTransactionConsumptionExport: RpcSDKManageTransactionConsumptionExport.RpcSDKManageTransactionConsumptionExport,
  RpcSDKManageTransactionMakeUpPosMachineRecharge: RpcSDKManageTransactionMakeUpPosMachineRecharge.RpcSDKManageTransactionMakeUpPosMachineRecharge,
  RpcSDKManageTransactionQuery: RpcSDKManageTransactionQuery.RpcSDKManageTransactionQuery,
  RpcSDKManageTransactionRechargeReconcilation: RpcSDKManageTransactionRechargeReconcilation.RpcSDKManageTransactionRechargeReconcilation,
  RpcSDKManageUserAdd: RpcSDKManageUserAdd.RpcSDKManageUserAdd,
  RpcSDKManageUserAddPermission: RpcSDKManageUserAddPermission.RpcSDKManageUserAddPermission,
  RpcSDKManageUserDelete: RpcSDKManageUserDelete.RpcSDKManageUserDelete,
  RpcSDKManageUserDeletePermission: RpcSDKManageUserDeletePermission.RpcSDKManageUserDeletePermission,
  RpcSDKManageUserFreeze: RpcSDKManageUserFreeze.RpcSDKManageUserFreeze,
  RpcSDKManageUserGetPermission: RpcSDKManageUserGetPermission.RpcSDKManageUserGetPermission,
  RpcSDKManageUserModifyPassword: RpcSDKManageUserModifyPassword.RpcSDKManageUserModifyPassword,
  RpcSDKManageUserQuery: RpcSDKManageUserQuery.RpcSDKManageUserQuery,
  RpcSDKManageUserResetLoginPasswordWithSms: RpcSDKManageUserResetLoginPasswordWithSms.RpcSDKManageUserResetLoginPasswordWithSms,
  RpcSDKManageUserUnFreeze: RpcSDKManageUserUnFreeze.RpcSDKManageUserUnFreeze
};

let RpcMap = {};
RpcMap[RpcSDKManageActivityActive.RpcSDKManageActivityActiveMethod] = {
  rpc: RpcSDKManageActivityActive.RpcSDKManageActivityActive,
  method: RpcSDKManageActivityActive.RpcSDKManageActivityActiveMethod,
  type: RpcSDKManageActivityActive.RpcSDKManageActivityActiveRpcType,
  params: [
    'activityType',
    'ID'
  ]
};
RpcMap[RpcSDKManageActivityActiveCardAdd.RpcSDKManageActivityActiveCardAddMethod] = {
  rpc: RpcSDKManageActivityActiveCardAdd.RpcSDKManageActivityActiveCardAdd,
  method: RpcSDKManageActivityActiveCardAdd.RpcSDKManageActivityActiveCardAddMethod,
  type: RpcSDKManageActivityActiveCardAdd.RpcSDKManageActivityActiveCardAddRpcType,
  params: [
    'merchantNo',
    'rebateMoney',
    'rebatePoints',
    'effectiveDate',
    'endDate'
  ]
};
RpcMap[RpcSDKManageActivityActiveCardModify.RpcSDKManageActivityActiveCardModifyMethod] = {
  rpc: RpcSDKManageActivityActiveCardModify.RpcSDKManageActivityActiveCardModify,
  method: RpcSDKManageActivityActiveCardModify.RpcSDKManageActivityActiveCardModifyMethod,
  type: RpcSDKManageActivityActiveCardModify.RpcSDKManageActivityActiveCardModifyRpcType,
  params: [
    'ID',
    'rebateMoney',
    'rebatePoints',
    'effectiveDate',
    'endDate'
  ]
};
RpcMap[RpcSDKManageActivityActiveCardQuery.RpcSDKManageActivityActiveCardQueryMethod] = {
  rpc: RpcSDKManageActivityActiveCardQuery.RpcSDKManageActivityActiveCardQuery,
  method: RpcSDKManageActivityActiveCardQuery.RpcSDKManageActivityActiveCardQueryMethod,
  type: RpcSDKManageActivityActiveCardQuery.RpcSDKManageActivityActiveCardQueryRpcType,
  params: [
    'ID',
    'merchantNo',
    'effectiveDateStart',
    'effectiveDateEnd',
    'endDateStart',
    'endDateEnd',
    'status',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManageActivityDelete.RpcSDKManageActivityDeleteMethod] = {
  rpc: RpcSDKManageActivityDelete.RpcSDKManageActivityDelete,
  method: RpcSDKManageActivityDelete.RpcSDKManageActivityDeleteMethod,
  type: RpcSDKManageActivityDelete.RpcSDKManageActivityDeleteRpcType,
  params: [
    'activityType',
    'ID'
  ]
};
RpcMap[RpcSDKManageActivityInvalid.RpcSDKManageActivityInvalidMethod] = {
  rpc: RpcSDKManageActivityInvalid.RpcSDKManageActivityInvalid,
  method: RpcSDKManageActivityInvalid.RpcSDKManageActivityInvalidMethod,
  type: RpcSDKManageActivityInvalid.RpcSDKManageActivityInvalidRpcType,
  params: [
    'activityType',
    'ID'
  ]
};
RpcMap[RpcSDKManageActivityRechargeRebateAdd.RpcSDKManageActivityRechargeRebateAddMethod] = {
  rpc: RpcSDKManageActivityRechargeRebateAdd.RpcSDKManageActivityRechargeRebateAdd,
  method: RpcSDKManageActivityRechargeRebateAdd.RpcSDKManageActivityRechargeRebateAddMethod,
  type: RpcSDKManageActivityRechargeRebateAdd.RpcSDKManageActivityRechargeRebateAddRpcType,
  params: [
    'merchantNo',
    'merchantCardTypeId',
    'rechargeMoney',
    'rebateMoney',
    'rebatePoints',
    'effectiveDate',
    'endDate'
  ]
};
RpcMap[RpcSDKManageActivityRechargeRebateModify.RpcSDKManageActivityRechargeRebateModifyMethod] = {
  rpc: RpcSDKManageActivityRechargeRebateModify.RpcSDKManageActivityRechargeRebateModify,
  method: RpcSDKManageActivityRechargeRebateModify.RpcSDKManageActivityRechargeRebateModifyMethod,
  type: RpcSDKManageActivityRechargeRebateModify.RpcSDKManageActivityRechargeRebateModifyRpcType,
  params: [
    'ID',
    'rechargeMoney',
    'rebateMoney',
    'rebatePoints',
    'effectiveDate',
    'endDate'
  ]
};
RpcMap[RpcSDKManageActivityRechargeRebateQuery.RpcSDKManageActivityRechargeRebateQueryMethod] = {
  rpc: RpcSDKManageActivityRechargeRebateQuery.RpcSDKManageActivityRechargeRebateQuery,
  method: RpcSDKManageActivityRechargeRebateQuery.RpcSDKManageActivityRechargeRebateQueryMethod,
  type: RpcSDKManageActivityRechargeRebateQuery.RpcSDKManageActivityRechargeRebateQueryRpcType,
  params: [
    'ID',
    'merchantNo',
    'merchantCardTypeId',
    'effectiveDateStart',
    'effectiveDateEnd',
    'endDateStart',
    'endDateEnd',
    'status',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManageAuthLogout.RpcSDKManageAuthLogoutMethod] = {
  rpc: RpcSDKManageAuthLogout.RpcSDKManageAuthLogout,
  method: RpcSDKManageAuthLogout.RpcSDKManageAuthLogoutMethod,
  type: RpcSDKManageAuthLogout.RpcSDKManageAuthLogoutRpcType,
  params: [
  ]
};
RpcMap[RpcSDKManageCardTypeAdd.RpcSDKManageCardTypeAddMethod] = {
  rpc: RpcSDKManageCardTypeAdd.RpcSDKManageCardTypeAdd,
  method: RpcSDKManageCardTypeAdd.RpcSDKManageCardTypeAddMethod,
  type: RpcSDKManageCardTypeAdd.RpcSDKManageCardTypeAddRpcType,
  params: [
    'merchantNo',
    'cardBin',
    'cardPrice',
    'initCardValue',
    'cardTypeName',
    'termOfValidity',
    'cardTypeDiscountRate',
    'singleRechargeLimitMin',
    'singleRechargeLimit',
    'highestMoneyLimit',
    'highestVirtualMoneyLimit'
  ]
};
RpcMap[RpcSDKManageCardTypeDelete.RpcSDKManageCardTypeDeleteMethod] = {
  rpc: RpcSDKManageCardTypeDelete.RpcSDKManageCardTypeDelete,
  method: RpcSDKManageCardTypeDelete.RpcSDKManageCardTypeDeleteMethod,
  type: RpcSDKManageCardTypeDelete.RpcSDKManageCardTypeDeleteRpcType,
  params: [
    'merchantCardTypeId'
  ]
};
RpcMap[RpcSDKManageCardTypeModify.RpcSDKManageCardTypeModifyMethod] = {
  rpc: RpcSDKManageCardTypeModify.RpcSDKManageCardTypeModify,
  method: RpcSDKManageCardTypeModify.RpcSDKManageCardTypeModifyMethod,
  type: RpcSDKManageCardTypeModify.RpcSDKManageCardTypeModifyRpcType,
  params: [
    'cardTypeId',
    'cardBin',
    'cardPrice',
    'initCardValue',
    'cardTypeName',
    'termOfValidity',
    'singleRechargeLimitMin',
    'singleRechargeLimit',
    'highestMoneyLimit',
    'highestVirtualMoneyLimit',
    'cardTypeDiscountRate'
  ]
};
RpcMap[RpcSDKManageCardTypeQuery.RpcSDKManageCardTypeQueryMethod] = {
  rpc: RpcSDKManageCardTypeQuery.RpcSDKManageCardTypeQuery,
  method: RpcSDKManageCardTypeQuery.RpcSDKManageCardTypeQueryMethod,
  type: RpcSDKManageCardTypeQuery.RpcSDKManageCardTypeQueryRpcType,
  params: [
    'merchantCardTypeId',
    'merchantNo',
    'merchantCardTypeType',
    'cardBin',
    'cardBinVirtual',
    'cardTypeName',
    'status',
    'activateDateStart',
    'activateDateEnd',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageDiscountMerchantAdd.RpcSDKManageDiscountMerchantAddMethod] = {
  rpc: RpcSDKManageDiscountMerchantAdd.RpcSDKManageDiscountMerchantAdd,
  method: RpcSDKManageDiscountMerchantAdd.RpcSDKManageDiscountMerchantAddMethod,
  type: RpcSDKManageDiscountMerchantAdd.RpcSDKManageDiscountMerchantAddRpcType,
  params: [
    'merchantNo',
    'miniPayMemberDiscountRate',
    'originMemberDiscountRate',
    'normalMemberDiscountRate',
    'merchantAccountLevel'
  ]
};
RpcMap[RpcSDKManageDiscountMerchantModify.RpcSDKManageDiscountMerchantModifyMethod] = {
  rpc: RpcSDKManageDiscountMerchantModify.RpcSDKManageDiscountMerchantModify,
  method: RpcSDKManageDiscountMerchantModify.RpcSDKManageDiscountMerchantModifyMethod,
  type: RpcSDKManageDiscountMerchantModify.RpcSDKManageDiscountMerchantModifyRpcType,
  params: [
    'discountID',
    'miniPayMemberDiscountRate',
    'originMemberDiscountRate',
    'normalMemberDiscountRate'
  ]
};
RpcMap[RpcSDKManageDiscountMerchantQuery.RpcSDKManageDiscountMerchantQueryMethod] = {
  rpc: RpcSDKManageDiscountMerchantQuery.RpcSDKManageDiscountMerchantQuery,
  method: RpcSDKManageDiscountMerchantQuery.RpcSDKManageDiscountMerchantQueryMethod,
  type: RpcSDKManageDiscountMerchantQuery.RpcSDKManageDiscountMerchantQueryRpcType,
  params: [
    'ID',
    'merchantNo',
    'merchantAccountLevel',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageDiscountPaymentAdd.RpcSDKManageDiscountPaymentAddMethod] = {
  rpc: RpcSDKManageDiscountPaymentAdd.RpcSDKManageDiscountPaymentAdd,
  method: RpcSDKManageDiscountPaymentAdd.RpcSDKManageDiscountPaymentAddMethod,
  type: RpcSDKManageDiscountPaymentAdd.RpcSDKManageDiscountPaymentAddRpcType,
  params: [
    'merchantNo',
    'miniPayMemberDiscountRate',
    'originMemberDiscountRate',
    'normalMemberDiscountRate',
    'merchantAccountLevel'
  ]
};
RpcMap[RpcSDKManageDiscountPaymentModify.RpcSDKManageDiscountPaymentModifyMethod] = {
  rpc: RpcSDKManageDiscountPaymentModify.RpcSDKManageDiscountPaymentModify,
  method: RpcSDKManageDiscountPaymentModify.RpcSDKManageDiscountPaymentModifyMethod,
  type: RpcSDKManageDiscountPaymentModify.RpcSDKManageDiscountPaymentModifyRpcType,
  params: [
    'discountID',
    'miniPayMemberDiscountRate',
    'originMemberDiscountRate',
    'normalMemberDiscountRate'
  ]
};
RpcMap[RpcSDKManageDiscountPaymentQuery.RpcSDKManageDiscountPaymentQueryMethod] = {
  rpc: RpcSDKManageDiscountPaymentQuery.RpcSDKManageDiscountPaymentQuery,
  method: RpcSDKManageDiscountPaymentQuery.RpcSDKManageDiscountPaymentQueryMethod,
  type: RpcSDKManageDiscountPaymentQuery.RpcSDKManageDiscountPaymentQueryRpcType,
  params: [
    'ID',
    'merchantNo',
    'merchantAccountLevel',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageDiscountQueryByMerchant.RpcSDKManageDiscountQueryByMerchantMethod] = {
  rpc: RpcSDKManageDiscountQueryByMerchant.RpcSDKManageDiscountQueryByMerchant,
  method: RpcSDKManageDiscountQueryByMerchant.RpcSDKManageDiscountQueryByMerchantMethod,
  type: RpcSDKManageDiscountQueryByMerchant.RpcSDKManageDiscountQueryByMerchantRpcType,
  params: [
    'merchantNo',
    'merchantAccountLevel',
    'status'
  ]
};
RpcMap[RpcSDKManageFactorageConsumptionModify.RpcSDKManageFactorageConsumptionModifyMethod] = {
  rpc: RpcSDKManageFactorageConsumptionModify.RpcSDKManageFactorageConsumptionModify,
  method: RpcSDKManageFactorageConsumptionModify.RpcSDKManageFactorageConsumptionModifyMethod,
  type: RpcSDKManageFactorageConsumptionModify.RpcSDKManageFactorageConsumptionModifyRpcType,
  params: [
    'merchantNo',
    'ratioMemberOrigin',
    'ratioMemberNormal',
    'ratioMemberMiniPay'
  ]
};
RpcMap[RpcSDKManageFactorageConsumptionQuery.RpcSDKManageFactorageConsumptionQueryMethod] = {
  rpc: RpcSDKManageFactorageConsumptionQuery.RpcSDKManageFactorageConsumptionQuery,
  method: RpcSDKManageFactorageConsumptionQuery.RpcSDKManageFactorageConsumptionQueryMethod,
  type: RpcSDKManageFactorageConsumptionQuery.RpcSDKManageFactorageConsumptionQueryRpcType,
  params: [
    'merchantNo',
    'status',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManageFactorageQueryByMerchant.RpcSDKManageFactorageQueryByMerchantMethod] = {
  rpc: RpcSDKManageFactorageQueryByMerchant.RpcSDKManageFactorageQueryByMerchant,
  method: RpcSDKManageFactorageQueryByMerchant.RpcSDKManageFactorageQueryByMerchantMethod,
  type: RpcSDKManageFactorageQueryByMerchant.RpcSDKManageFactorageQueryByMerchantRpcType,
  params: [
    'merchantNo',
    'status'
  ]
};
RpcMap[RpcSDKManageFactorageRechargeModify.RpcSDKManageFactorageRechargeModifyMethod] = {
  rpc: RpcSDKManageFactorageRechargeModify.RpcSDKManageFactorageRechargeModify,
  method: RpcSDKManageFactorageRechargeModify.RpcSDKManageFactorageRechargeModifyMethod,
  type: RpcSDKManageFactorageRechargeModify.RpcSDKManageFactorageRechargeModifyRpcType,
  params: [
    'merchantNo',
    'ratioMemberOrigin',
    'ratioMemberNormal',
    'ratioMemberMiniPay'
  ]
};
RpcMap[RpcSDKManageFactorageRechargeQuery.RpcSDKManageFactorageRechargeQueryMethod] = {
  rpc: RpcSDKManageFactorageRechargeQuery.RpcSDKManageFactorageRechargeQuery,
  method: RpcSDKManageFactorageRechargeQuery.RpcSDKManageFactorageRechargeQueryMethod,
  type: RpcSDKManageFactorageRechargeQuery.RpcSDKManageFactorageRechargeQueryRpcType,
  params: [
    'merchantNo',
    'status',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManageFactorageThirdPartyModify.RpcSDKManageFactorageThirdPartyModifyMethod] = {
  rpc: RpcSDKManageFactorageThirdPartyModify.RpcSDKManageFactorageThirdPartyModify,
  method: RpcSDKManageFactorageThirdPartyModify.RpcSDKManageFactorageThirdPartyModifyMethod,
  type: RpcSDKManageFactorageThirdPartyModify.RpcSDKManageFactorageThirdPartyModifyRpcType,
  params: [
    'merchantNo',
    'ratioMemberOrigin',
    'ratioMemberNormal',
    'ratioMemberMiniPay'
  ]
};
RpcMap[RpcSDKManageFactorageThirdPartyQuery.RpcSDKManageFactorageThirdPartyQueryMethod] = {
  rpc: RpcSDKManageFactorageThirdPartyQuery.RpcSDKManageFactorageThirdPartyQuery,
  method: RpcSDKManageFactorageThirdPartyQuery.RpcSDKManageFactorageThirdPartyQueryMethod,
  type: RpcSDKManageFactorageThirdPartyQuery.RpcSDKManageFactorageThirdPartyQueryRpcType,
  params: [
    'merchantNo',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageFinancePointsMakeUpMiniPoints.RpcSDKManageFinancePointsMakeUpMiniPointsMethod] = {
  rpc: RpcSDKManageFinancePointsMakeUpMiniPoints.RpcSDKManageFinancePointsMakeUpMiniPoints,
  method: RpcSDKManageFinancePointsMakeUpMiniPoints.RpcSDKManageFinancePointsMakeUpMiniPointsMethod,
  type: RpcSDKManageFinancePointsMakeUpMiniPoints.RpcSDKManageFinancePointsMakeUpMiniPointsRpcType,
  params: [
    'memberID',
    'points'
  ]
};
RpcMap[RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount.RpcSDKManageFinancePointsMakeUpPointsToMerchantAccountMethod] = {
  rpc: RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount.RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount,
  method: RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount.RpcSDKManageFinancePointsMakeUpPointsToMerchantAccountMethod,
  type: RpcSDKManageFinancePointsMakeUpPointsToMerchantAccount.RpcSDKManageFinancePointsMakeUpPointsToMerchantAccountRpcType,
  params: [
    'memberID',
    'merchantNo',
    'points'
  ]
};
RpcMap[RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard.RpcSDKManageFinancePointsMakeUpPointsToPrepaidCardMethod] = {
  rpc: RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard.RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard,
  method: RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard.RpcSDKManageFinancePointsMakeUpPointsToPrepaidCardMethod,
  type: RpcSDKManageFinancePointsMakeUpPointsToPrepaidCard.RpcSDKManageFinancePointsMakeUpPointsToPrepaidCardRpcType,
  params: [
    'prePaidCardId',
    'points'
  ]
};
RpcMap[RpcSDKManageFinanceProfitSharingModify.RpcSDKManageFinanceProfitSharingModifyMethod] = {
  rpc: RpcSDKManageFinanceProfitSharingModify.RpcSDKManageFinanceProfitSharingModify,
  method: RpcSDKManageFinanceProfitSharingModify.RpcSDKManageFinanceProfitSharingModifyMethod,
  type: RpcSDKManageFinanceProfitSharingModify.RpcSDKManageFinanceProfitSharingModifyRpcType,
  params: [
    'merchantNo',
    'ratePayMini',
    'rateDispatchCard',
    'rateMerchantGenerateChannel'
  ]
};
RpcMap[RpcSDKManageFinanceProfitSharingQuery.RpcSDKManageFinanceProfitSharingQueryMethod] = {
  rpc: RpcSDKManageFinanceProfitSharingQuery.RpcSDKManageFinanceProfitSharingQuery,
  method: RpcSDKManageFinanceProfitSharingQuery.RpcSDKManageFinanceProfitSharingQueryMethod,
  type: RpcSDKManageFinanceProfitSharingQuery.RpcSDKManageFinanceProfitSharingQueryRpcType,
  params: [
    'merchantNo',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageLogin.RpcSDKManageLoginMethod] = {
  rpc: RpcSDKManageLogin.RpcSDKManageLogin,
  method: RpcSDKManageLogin.RpcSDKManageLoginMethod,
  type: RpcSDKManageLogin.RpcSDKManageLoginRpcType,
  params: [
    'userName',
    'password',
    'verifyCode'
  ]
};
RpcMap[RpcSDKManageLoginWeiXinMerchant.RpcSDKManageLoginWeiXinMerchantMethod] = {
  rpc: RpcSDKManageLoginWeiXinMerchant.RpcSDKManageLoginWeiXinMerchant,
  method: RpcSDKManageLoginWeiXinMerchant.RpcSDKManageLoginWeiXinMerchantMethod,
  type: RpcSDKManageLoginWeiXinMerchant.RpcSDKManageLoginWeiXinMerchantRpcType,
  params: [
    'userName',
    'password'
  ]
};
RpcMap[RpcSDKManageLoginWithCellphoneVerifyCode.RpcSDKManageLoginWithCellphoneVerifyCodeMethod] = {
  rpc: RpcSDKManageLoginWithCellphoneVerifyCode.RpcSDKManageLoginWithCellphoneVerifyCode,
  method: RpcSDKManageLoginWithCellphoneVerifyCode.RpcSDKManageLoginWithCellphoneVerifyCodeMethod,
  type: RpcSDKManageLoginWithCellphoneVerifyCode.RpcSDKManageLoginWithCellphoneVerifyCodeRpcType,
  params: [
    'userName',
    'password',
    'verifyCode'
  ]
};
RpcMap[RpcSDKManageLoginWithRefreshToken.RpcSDKManageLoginWithRefreshTokenMethod] = {
  rpc: RpcSDKManageLoginWithRefreshToken.RpcSDKManageLoginWithRefreshToken,
  method: RpcSDKManageLoginWithRefreshToken.RpcSDKManageLoginWithRefreshTokenMethod,
  type: RpcSDKManageLoginWithRefreshToken.RpcSDKManageLoginWithRefreshTokenRpcType,
  params: [
    'userName',
    'password',
    'refreshToken'
  ]
};
RpcMap[RpcSDKManageLoginWithSecretKey.RpcSDKManageLoginWithSecretKeyMethod] = {
  rpc: RpcSDKManageLoginWithSecretKey.RpcSDKManageLoginWithSecretKey,
  method: RpcSDKManageLoginWithSecretKey.RpcSDKManageLoginWithSecretKeyMethod,
  type: RpcSDKManageLoginWithSecretKey.RpcSDKManageLoginWithSecretKeyRpcType,
  params: [
    'userName',
    'password',
    'secretKey'
  ]
};
RpcMap[RpcSDKManageMemberFreeze.RpcSDKManageMemberFreezeMethod] = {
  rpc: RpcSDKManageMemberFreeze.RpcSDKManageMemberFreeze,
  method: RpcSDKManageMemberFreeze.RpcSDKManageMemberFreezeMethod,
  type: RpcSDKManageMemberFreeze.RpcSDKManageMemberFreezeRpcType,
  params: [
    'memberId'
  ]
};
RpcMap[RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount.RpcSDKManageMemberMerchantAccountAddMerchantMemberAccountMethod] = {
  rpc: RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount.RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount,
  method: RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount.RpcSDKManageMemberMerchantAccountAddMerchantMemberAccountMethod,
  type: RpcSDKManageMemberMerchantAccountAddMerchantMemberAccount.RpcSDKManageMemberMerchantAccountAddMerchantMemberAccountRpcType,
  params: [
    'merchantNo',
    'memberId'
  ]
};
RpcMap[RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel.RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannelMethod] = {
  rpc: RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel.RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel,
  method: RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel.RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannelMethod,
  type: RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannel.RpcSDKManageMemberMerchantAccountModifyMemberGenerateChannelRpcType,
  params: [
    'memberId',
    'merchantNo',
    'channel',
    'isMerchantOriginMember'
  ]
};
RpcMap[RpcSDKManageMemberMerchantAccountQuery.RpcSDKManageMemberMerchantAccountQueryMethod] = {
  rpc: RpcSDKManageMemberMerchantAccountQuery.RpcSDKManageMemberMerchantAccountQuery,
  method: RpcSDKManageMemberMerchantAccountQuery.RpcSDKManageMemberMerchantAccountQueryMethod,
  type: RpcSDKManageMemberMerchantAccountQuery.RpcSDKManageMemberMerchantAccountQueryRpcType,
  params: [
    'memberId',
    'merchantNo'
  ]
};
RpcMap[RpcSDKManageMemberModify.RpcSDKManageMemberModifyMethod] = {
  rpc: RpcSDKManageMemberModify.RpcSDKManageMemberModify,
  method: RpcSDKManageMemberModify.RpcSDKManageMemberModifyMethod,
  type: RpcSDKManageMemberModify.RpcSDKManageMemberModifyRpcType,
  params: [
    'memberId',
    'cellphone',
    'password',
    'email',
    'name',
    'gender',
    'idType',
    'idNo',
    'messageFlag'
  ]
};
RpcMap[RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus.RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatusMethod] = {
  rpc: RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus.RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus,
  method: RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus.RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatusMethod,
  type: RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatus.RpcSDKManageMemberPaymentModifyLittleFeeFreePasswordStatusRpcType,
  params: [
    'memberId',
    'freePwdOfLittleMoneyFlag'
  ]
};
RpcMap[RpcSDKManageMemberPaymentModifyPayPwd.RpcSDKManageMemberPaymentModifyPayPwdMethod] = {
  rpc: RpcSDKManageMemberPaymentModifyPayPwd.RpcSDKManageMemberPaymentModifyPayPwd,
  method: RpcSDKManageMemberPaymentModifyPayPwd.RpcSDKManageMemberPaymentModifyPayPwdMethod,
  type: RpcSDKManageMemberPaymentModifyPayPwd.RpcSDKManageMemberPaymentModifyPayPwdRpcType,
  params: [
    'memberId',
    'payPassword',
    'oldPayPassword',
    'verifyCode'
  ]
};
RpcMap[RpcSDKManageMemberPaymentResetPayPassword.RpcSDKManageMemberPaymentResetPayPasswordMethod] = {
  rpc: RpcSDKManageMemberPaymentResetPayPassword.RpcSDKManageMemberPaymentResetPayPassword,
  method: RpcSDKManageMemberPaymentResetPayPassword.RpcSDKManageMemberPaymentResetPayPasswordMethod,
  type: RpcSDKManageMemberPaymentResetPayPassword.RpcSDKManageMemberPaymentResetPayPasswordRpcType,
  params: [
    'memberId',
    'password',
    'cellphoneVerifyCode'
  ]
};
RpcMap[RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit.RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimitMethod] = {
  rpc: RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit.RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit,
  method: RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit.RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimitMethod,
  type: RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimit.RpcSDKManageMemberPaymentSetLittleFeeFreePasswordLimitRpcType,
  params: [
    'memberId',
    'highestFeeOfFreePwd'
  ]
};
RpcMap[RpcSDKManageMemberQuery.RpcSDKManageMemberQueryMethod] = {
  rpc: RpcSDKManageMemberQuery.RpcSDKManageMemberQuery,
  method: RpcSDKManageMemberQuery.RpcSDKManageMemberQueryMethod,
  type: RpcSDKManageMemberQuery.RpcSDKManageMemberQueryRpcType,
  params: [
    'memberId',
    'cellphone',
    'username',
    'name',
    'idType',
    'idNo',
    'messageFlag',
    'realNameCertificationFlag',
    'gender',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageMemberQueryMemberDetail.RpcSDKManageMemberQueryMemberDetailMethod] = {
  rpc: RpcSDKManageMemberQueryMemberDetail.RpcSDKManageMemberQueryMemberDetail,
  method: RpcSDKManageMemberQueryMemberDetail.RpcSDKManageMemberQueryMemberDetailMethod,
  type: RpcSDKManageMemberQueryMemberDetail.RpcSDKManageMemberQueryMemberDetailRpcType,
  params: [
    'memberId'
  ]
};
RpcMap[RpcSDKManageMemberQueryMerchantMember.RpcSDKManageMemberQueryMerchantMemberMethod] = {
  rpc: RpcSDKManageMemberQueryMerchantMember.RpcSDKManageMemberQueryMerchantMember,
  method: RpcSDKManageMemberQueryMerchantMember.RpcSDKManageMemberQueryMerchantMemberMethod,
  type: RpcSDKManageMemberQueryMerchantMember.RpcSDKManageMemberQueryMerchantMemberRpcType,
  params: [
    'memberId',
    'merchantNo',
    'cellphone',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageMemberRealNameCertification.RpcSDKManageMemberRealNameCertificationMethod] = {
  rpc: RpcSDKManageMemberRealNameCertification.RpcSDKManageMemberRealNameCertification,
  method: RpcSDKManageMemberRealNameCertification.RpcSDKManageMemberRealNameCertificationMethod,
  type: RpcSDKManageMemberRealNameCertification.RpcSDKManageMemberRealNameCertificationRpcType,
  params: [
    'memberId',
    'name',
    'idType',
    'idNo'
  ]
};
RpcMap[RpcSDKManageMemberRegister.RpcSDKManageMemberRegisterMethod] = {
  rpc: RpcSDKManageMemberRegister.RpcSDKManageMemberRegister,
  method: RpcSDKManageMemberRegister.RpcSDKManageMemberRegisterMethod,
  type: RpcSDKManageMemberRegister.RpcSDKManageMemberRegisterRpcType,
  params: [
    'cellphone',
    'password',
    'name',
    'idType',
    'idNo',
    'messageFlag',
    'gender'
  ]
};
RpcMap[RpcSDKManageMemberRegisterMerchantMember.RpcSDKManageMemberRegisterMerchantMemberMethod] = {
  rpc: RpcSDKManageMemberRegisterMerchantMember.RpcSDKManageMemberRegisterMerchantMember,
  method: RpcSDKManageMemberRegisterMerchantMember.RpcSDKManageMemberRegisterMerchantMemberMethod,
  type: RpcSDKManageMemberRegisterMerchantMember.RpcSDKManageMemberRegisterMerchantMemberRpcType,
  params: [
    'cellphone',
    'merchantNo'
  ]
};
RpcMap[RpcSDKManageMemberUnFreeze.RpcSDKManageMemberUnFreezeMethod] = {
  rpc: RpcSDKManageMemberUnFreeze.RpcSDKManageMemberUnFreeze,
  method: RpcSDKManageMemberUnFreeze.RpcSDKManageMemberUnFreezeMethod,
  type: RpcSDKManageMemberUnFreeze.RpcSDKManageMemberUnFreezeRpcType,
  params: [
    'memberId'
  ]
};
RpcMap[RpcSDKManageMerchantAdd.RpcSDKManageMerchantAddMethod] = {
  rpc: RpcSDKManageMerchantAdd.RpcSDKManageMerchantAdd,
  method: RpcSDKManageMerchantAdd.RpcSDKManageMerchantAddMethod,
  type: RpcSDKManageMerchantAdd.RpcSDKManageMerchantAddRpcType,
  params: [
    'merchantName',
    'alias',
    'merchantAddress',
    'merchantSize',
    'longitude',
    'latitude',
    'businessLicence'
  ]
};
RpcMap[RpcSDKManageMerchantChannelAdd.RpcSDKManageMerchantChannelAddMethod] = {
  rpc: RpcSDKManageMerchantChannelAdd.RpcSDKManageMerchantChannelAdd,
  method: RpcSDKManageMerchantChannelAdd.RpcSDKManageMerchantChannelAddMethod,
  type: RpcSDKManageMerchantChannelAdd.RpcSDKManageMerchantChannelAddRpcType,
  params: [
    'merchantNo',
    'channel',
    'generateByMerchantNO',
    'generateByMemberId'
  ]
};
RpcMap[RpcSDKManageMerchantChannelModify.RpcSDKManageMerchantChannelModifyMethod] = {
  rpc: RpcSDKManageMerchantChannelModify.RpcSDKManageMerchantChannelModify,
  method: RpcSDKManageMerchantChannelModify.RpcSDKManageMerchantChannelModifyMethod,
  type: RpcSDKManageMerchantChannelModify.RpcSDKManageMerchantChannelModifyRpcType,
  params: [
    'merchantNo',
    'channel',
    'generateByMerchantNO',
    'generateByMemberId'
  ]
};
RpcMap[RpcSDKManageMerchantChannelQuery.RpcSDKManageMerchantChannelQueryMethod] = {
  rpc: RpcSDKManageMerchantChannelQuery.RpcSDKManageMerchantChannelQuery,
  method: RpcSDKManageMerchantChannelQuery.RpcSDKManageMerchantChannelQueryMethod,
  type: RpcSDKManageMerchantChannelQuery.RpcSDKManageMerchantChannelQueryRpcType,
  params: [
    'merchantNo',
    'channel',
    'generateByMemberId',
    'generateByMerchantNO',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageMerchantDelete.RpcSDKManageMerchantDeleteMethod] = {
  rpc: RpcSDKManageMerchantDelete.RpcSDKManageMerchantDelete,
  method: RpcSDKManageMerchantDelete.RpcSDKManageMerchantDeleteMethod,
  type: RpcSDKManageMerchantDelete.RpcSDKManageMerchantDeleteRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManageMerchantFreeze.RpcSDKManageMerchantFreezeMethod] = {
  rpc: RpcSDKManageMerchantFreeze.RpcSDKManageMerchantFreeze,
  method: RpcSDKManageMerchantFreeze.RpcSDKManageMerchantFreezeMethod,
  type: RpcSDKManageMerchantFreeze.RpcSDKManageMerchantFreezeRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManageMerchantModify.RpcSDKManageMerchantModifyMethod] = {
  rpc: RpcSDKManageMerchantModify.RpcSDKManageMerchantModify,
  method: RpcSDKManageMerchantModify.RpcSDKManageMerchantModifyMethod,
  type: RpcSDKManageMerchantModify.RpcSDKManageMerchantModifyRpcType,
  params: [
    'merchantNO',
    'merchantName',
    'alias',
    'merchantAddress',
    'merchantSize',
    'longitude',
    'latitude',
    'businessLicence'
  ]
};
RpcMap[RpcSDKManageMerchantPaymentIDAdd.RpcSDKManageMerchantPaymentIDAddMethod] = {
  rpc: RpcSDKManageMerchantPaymentIDAdd.RpcSDKManageMerchantPaymentIDAdd,
  method: RpcSDKManageMerchantPaymentIDAdd.RpcSDKManageMerchantPaymentIDAddMethod,
  type: RpcSDKManageMerchantPaymentIDAdd.RpcSDKManageMerchantPaymentIDAddRpcType,
  params: [
    'merchantNo',
    'allPeoplePayId',
    'shopPreferentialId',
    'bankCardId',
    'prePaidCardId'
  ]
};
RpcMap[RpcSDKManageMerchantPaymentIDModify.RpcSDKManageMerchantPaymentIDModifyMethod] = {
  rpc: RpcSDKManageMerchantPaymentIDModify.RpcSDKManageMerchantPaymentIDModify,
  method: RpcSDKManageMerchantPaymentIDModify.RpcSDKManageMerchantPaymentIDModifyMethod,
  type: RpcSDKManageMerchantPaymentIDModify.RpcSDKManageMerchantPaymentIDModifyRpcType,
  params: [
    'merchantNo',
    'allPeoplePayId',
    'shopPreferentialId',
    'bankCardId',
    'prePaidCardId'
  ]
};
RpcMap[RpcSDKManageMerchantQuery.RpcSDKManageMerchantQueryMethod] = {
  rpc: RpcSDKManageMerchantQuery.RpcSDKManageMerchantQuery,
  method: RpcSDKManageMerchantQuery.RpcSDKManageMerchantQueryMethod,
  type: RpcSDKManageMerchantQuery.RpcSDKManageMerchantQueryRpcType,
  params: [
    'merchantNo',
    'merchantName',
    'alias',
    'merchantAddress',
    'merchantSize',
    'longitude',
    'latitude',
    'status',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManageMerchantQueryMerchantDetail.RpcSDKManageMerchantQueryMerchantDetailMethod] = {
  rpc: RpcSDKManageMerchantQueryMerchantDetail.RpcSDKManageMerchantQueryMerchantDetail,
  method: RpcSDKManageMerchantQueryMerchantDetail.RpcSDKManageMerchantQueryMerchantDetailMethod,
  type: RpcSDKManageMerchantQueryMerchantDetail.RpcSDKManageMerchantQueryMerchantDetailRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManageMerchantQueryReview.RpcSDKManageMerchantQueryReviewMethod] = {
  rpc: RpcSDKManageMerchantQueryReview.RpcSDKManageMerchantQueryReview,
  method: RpcSDKManageMerchantQueryReview.RpcSDKManageMerchantQueryReviewMethod,
  type: RpcSDKManageMerchantQueryReview.RpcSDKManageMerchantQueryReviewRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManageMerchantUnFreeze.RpcSDKManageMerchantUnFreezeMethod] = {
  rpc: RpcSDKManageMerchantUnFreeze.RpcSDKManageMerchantUnFreeze,
  method: RpcSDKManageMerchantUnFreeze.RpcSDKManageMerchantUnFreezeMethod,
  type: RpcSDKManageMerchantUnFreeze.RpcSDKManageMerchantUnFreezeRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManageMerchantPointsAdd.RpcSDKManageMerchantPointsAddMethod] = {
  rpc: RpcSDKManageMerchantPointsAdd.RpcSDKManageMerchantPointsAdd,
  method: RpcSDKManageMerchantPointsAdd.RpcSDKManageMerchantPointsAddMethod,
  type: RpcSDKManageMerchantPointsAdd.RpcSDKManageMerchantPointsAddRpcType,
  params: [
    'merchantCardTypeId',
    'moneyDenominator',
    'pointNumerator'
  ]
};
RpcMap[RpcSDKManageMerchantPointsDelete.RpcSDKManageMerchantPointsDeleteMethod] = {
  rpc: RpcSDKManageMerchantPointsDelete.RpcSDKManageMerchantPointsDelete,
  method: RpcSDKManageMerchantPointsDelete.RpcSDKManageMerchantPointsDeleteMethod,
  type: RpcSDKManageMerchantPointsDelete.RpcSDKManageMerchantPointsDeleteRpcType,
  params: [
    'merchantCardTypeId'
  ]
};
RpcMap[RpcSDKManageMerchantPointsModify.RpcSDKManageMerchantPointsModifyMethod] = {
  rpc: RpcSDKManageMerchantPointsModify.RpcSDKManageMerchantPointsModify,
  method: RpcSDKManageMerchantPointsModify.RpcSDKManageMerchantPointsModifyMethod,
  type: RpcSDKManageMerchantPointsModify.RpcSDKManageMerchantPointsModifyRpcType,
  params: [
    'merchantCardTypeId',
    'moneyDenominator',
    'pointNumerator'
  ]
};
RpcMap[RpcSDKManageMerchantPointsQuery.RpcSDKManageMerchantPointsQueryMethod] = {
  rpc: RpcSDKManageMerchantPointsQuery.RpcSDKManageMerchantPointsQuery,
  method: RpcSDKManageMerchantPointsQuery.RpcSDKManageMerchantPointsQueryMethod,
  type: RpcSDKManageMerchantPointsQuery.RpcSDKManageMerchantPointsQueryRpcType,
  params: [
    'merchantNo',
    'merchantCardTypeId',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageMiniPayPlatformCreate.RpcSDKManageMiniPayPlatformCreateMethod] = {
  rpc: RpcSDKManageMiniPayPlatformCreate.RpcSDKManageMiniPayPlatformCreate,
  method: RpcSDKManageMiniPayPlatformCreate.RpcSDKManageMiniPayPlatformCreateMethod,
  type: RpcSDKManageMiniPayPlatformCreate.RpcSDKManageMiniPayPlatformCreateRpcType,
  params: [
  ]
};
RpcMap[RpcSDKManageOrganizationAdd.RpcSDKManageOrganizationAddMethod] = {
  rpc: RpcSDKManageOrganizationAdd.RpcSDKManageOrganizationAdd,
  method: RpcSDKManageOrganizationAdd.RpcSDKManageOrganizationAddMethod,
  type: RpcSDKManageOrganizationAdd.RpcSDKManageOrganizationAddRpcType,
  params: [
    'organizationType',
    'organizationName',
    'headquarterMerchantNo'
  ]
};
RpcMap[RpcSDKManageOrganizationAddMerchant.RpcSDKManageOrganizationAddMerchantMethod] = {
  rpc: RpcSDKManageOrganizationAddMerchant.RpcSDKManageOrganizationAddMerchant,
  method: RpcSDKManageOrganizationAddMerchant.RpcSDKManageOrganizationAddMerchantMethod,
  type: RpcSDKManageOrganizationAddMerchant.RpcSDKManageOrganizationAddMerchantRpcType,
  params: [
    'merchantNo',
    'organizationId'
  ]
};
RpcMap[RpcSDKManageOrganizationDelete.RpcSDKManageOrganizationDeleteMethod] = {
  rpc: RpcSDKManageOrganizationDelete.RpcSDKManageOrganizationDelete,
  method: RpcSDKManageOrganizationDelete.RpcSDKManageOrganizationDeleteMethod,
  type: RpcSDKManageOrganizationDelete.RpcSDKManageOrganizationDeleteRpcType,
  params: [
    'organizationId'
  ]
};
RpcMap[RpcSDKManageOrganizationModify.RpcSDKManageOrganizationModifyMethod] = {
  rpc: RpcSDKManageOrganizationModify.RpcSDKManageOrganizationModify,
  method: RpcSDKManageOrganizationModify.RpcSDKManageOrganizationModifyMethod,
  type: RpcSDKManageOrganizationModify.RpcSDKManageOrganizationModifyRpcType,
  params: [
    'organizationId',
    'organizationType',
    'organizationName',
    'headquarterMerchantNo'
  ]
};
RpcMap[RpcSDKManageOrganizationModifyHeadquarter.RpcSDKManageOrganizationModifyHeadquarterMethod] = {
  rpc: RpcSDKManageOrganizationModifyHeadquarter.RpcSDKManageOrganizationModifyHeadquarter,
  method: RpcSDKManageOrganizationModifyHeadquarter.RpcSDKManageOrganizationModifyHeadquarterMethod,
  type: RpcSDKManageOrganizationModifyHeadquarter.RpcSDKManageOrganizationModifyHeadquarterRpcType,
  params: [
    'organizationId',
    'headquarterMerchantNo'
  ]
};
RpcMap[RpcSDKManageOrganizationModifyMerchant.RpcSDKManageOrganizationModifyMerchantMethod] = {
  rpc: RpcSDKManageOrganizationModifyMerchant.RpcSDKManageOrganizationModifyMerchant,
  method: RpcSDKManageOrganizationModifyMerchant.RpcSDKManageOrganizationModifyMerchantMethod,
  type: RpcSDKManageOrganizationModifyMerchant.RpcSDKManageOrganizationModifyMerchantRpcType,
  params: [
    'ID',
    'organizationId'
  ]
};
RpcMap[RpcSDKManageOrganizationQuery.RpcSDKManageOrganizationQueryMethod] = {
  rpc: RpcSDKManageOrganizationQuery.RpcSDKManageOrganizationQuery,
  method: RpcSDKManageOrganizationQuery.RpcSDKManageOrganizationQueryMethod,
  type: RpcSDKManageOrganizationQuery.RpcSDKManageOrganizationQueryRpcType,
  params: [
    'organizationId',
    'organizationType',
    'organizationName',
    'headquarterMerchantNo',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageOrganizationQueryDetail.RpcSDKManageOrganizationQueryDetailMethod] = {
  rpc: RpcSDKManageOrganizationQueryDetail.RpcSDKManageOrganizationQueryDetail,
  method: RpcSDKManageOrganizationQueryDetail.RpcSDKManageOrganizationQueryDetailMethod,
  type: RpcSDKManageOrganizationQueryDetail.RpcSDKManageOrganizationQueryDetailRpcType,
  params: [
    'organizationId',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageOrganizationRemoveMerchant.RpcSDKManageOrganizationRemoveMerchantMethod] = {
  rpc: RpcSDKManageOrganizationRemoveMerchant.RpcSDKManageOrganizationRemoveMerchant,
  method: RpcSDKManageOrganizationRemoveMerchant.RpcSDKManageOrganizationRemoveMerchantMethod,
  type: RpcSDKManageOrganizationRemoveMerchant.RpcSDKManageOrganizationRemoveMerchantRpcType,
  params: [
    'organizationId',
    'merchantNo'
  ]
};
RpcMap[RpcSDKManagePaymentAccountTransferAdd.RpcSDKManagePaymentAccountTransferAddMethod] = {
  rpc: RpcSDKManagePaymentAccountTransferAdd.RpcSDKManagePaymentAccountTransferAdd,
  method: RpcSDKManagePaymentAccountTransferAdd.RpcSDKManagePaymentAccountTransferAddMethod,
  type: RpcSDKManagePaymentAccountTransferAdd.RpcSDKManagePaymentAccountTransferAddRpcType,
  params: [
    'merchantNo',
    'highestMoneyTransfer',
    'highestPointsTransfer',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentAccountTransferDelete.RpcSDKManagePaymentAccountTransferDeleteMethod] = {
  rpc: RpcSDKManagePaymentAccountTransferDelete.RpcSDKManagePaymentAccountTransferDelete,
  method: RpcSDKManagePaymentAccountTransferDelete.RpcSDKManagePaymentAccountTransferDeleteMethod,
  type: RpcSDKManagePaymentAccountTransferDelete.RpcSDKManagePaymentAccountTransferDeleteRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManagePaymentAccountTransferModify.RpcSDKManagePaymentAccountTransferModifyMethod] = {
  rpc: RpcSDKManagePaymentAccountTransferModify.RpcSDKManagePaymentAccountTransferModify,
  method: RpcSDKManagePaymentAccountTransferModify.RpcSDKManagePaymentAccountTransferModifyMethod,
  type: RpcSDKManagePaymentAccountTransferModify.RpcSDKManagePaymentAccountTransferModifyRpcType,
  params: [
    'merchantNo',
    'highestMoneyTransfer',
    'highestPointsTransfer',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentAuth20Add.RpcSDKManagePaymentAuth20AddMethod] = {
  rpc: RpcSDKManagePaymentAuth20Add.RpcSDKManagePaymentAuth20Add,
  method: RpcSDKManagePaymentAuth20Add.RpcSDKManagePaymentAuth20AddMethod,
  type: RpcSDKManagePaymentAuth20Add.RpcSDKManagePaymentAuth20AddRpcType,
  params: [
    'merchantNo',
    'authenticatePayId',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentAuth20Delete.RpcSDKManagePaymentAuth20DeleteMethod] = {
  rpc: RpcSDKManagePaymentAuth20Delete.RpcSDKManagePaymentAuth20Delete,
  method: RpcSDKManagePaymentAuth20Delete.RpcSDKManagePaymentAuth20DeleteMethod,
  type: RpcSDKManagePaymentAuth20Delete.RpcSDKManagePaymentAuth20DeleteRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManagePaymentAuth20Modify.RpcSDKManagePaymentAuth20ModifyMethod] = {
  rpc: RpcSDKManagePaymentAuth20Modify.RpcSDKManagePaymentAuth20Modify,
  method: RpcSDKManagePaymentAuth20Modify.RpcSDKManagePaymentAuth20ModifyMethod,
  type: RpcSDKManagePaymentAuth20Modify.RpcSDKManagePaymentAuth20ModifyRpcType,
  params: [
    'merchantNo',
    'authenticatePayId',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentNetPayAdd.RpcSDKManagePaymentNetPayAddMethod] = {
  rpc: RpcSDKManagePaymentNetPayAdd.RpcSDKManagePaymentNetPayAdd,
  method: RpcSDKManagePaymentNetPayAdd.RpcSDKManagePaymentNetPayAddMethod,
  type: RpcSDKManagePaymentNetPayAdd.RpcSDKManagePaymentNetPayAddRpcType,
  params: [
    'merchantNo',
    'netPayBankOnlineId',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentNetPayDelete.RpcSDKManagePaymentNetPayDeleteMethod] = {
  rpc: RpcSDKManagePaymentNetPayDelete.RpcSDKManagePaymentNetPayDelete,
  method: RpcSDKManagePaymentNetPayDelete.RpcSDKManagePaymentNetPayDeleteMethod,
  type: RpcSDKManagePaymentNetPayDelete.RpcSDKManagePaymentNetPayDeleteRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManagePaymentNetPayModify.RpcSDKManagePaymentNetPayModifyMethod] = {
  rpc: RpcSDKManagePaymentNetPayModify.RpcSDKManagePaymentNetPayModify,
  method: RpcSDKManagePaymentNetPayModify.RpcSDKManagePaymentNetPayModifyMethod,
  type: RpcSDKManagePaymentNetPayModify.RpcSDKManagePaymentNetPayModifyRpcType,
  params: [
    'merchantNo',
    'netPayBankOnlineId',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentNoCardPayAdd.RpcSDKManagePaymentNoCardPayAddMethod] = {
  rpc: RpcSDKManagePaymentNoCardPayAdd.RpcSDKManagePaymentNoCardPayAdd,
  method: RpcSDKManagePaymentNoCardPayAdd.RpcSDKManagePaymentNoCardPayAddMethod,
  type: RpcSDKManagePaymentNoCardPayAdd.RpcSDKManagePaymentNoCardPayAddRpcType,
  params: [
    'merchantNo',
    'noCardPayId',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentNoCardPayDelete.RpcSDKManagePaymentNoCardPayDeleteMethod] = {
  rpc: RpcSDKManagePaymentNoCardPayDelete.RpcSDKManagePaymentNoCardPayDelete,
  method: RpcSDKManagePaymentNoCardPayDelete.RpcSDKManagePaymentNoCardPayDeleteMethod,
  type: RpcSDKManagePaymentNoCardPayDelete.RpcSDKManagePaymentNoCardPayDeleteRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManagePaymentNoCardPayModify.RpcSDKManagePaymentNoCardPayModifyMethod] = {
  rpc: RpcSDKManagePaymentNoCardPayModify.RpcSDKManagePaymentNoCardPayModify,
  method: RpcSDKManagePaymentNoCardPayModify.RpcSDKManagePaymentNoCardPayModifyMethod,
  type: RpcSDKManagePaymentNoCardPayModify.RpcSDKManagePaymentNoCardPayModifyRpcType,
  params: [
    'merchantNo',
    'noCardPayId',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentOnlineRechargeAdd.RpcSDKManagePaymentOnlineRechargeAddMethod] = {
  rpc: RpcSDKManagePaymentOnlineRechargeAdd.RpcSDKManagePaymentOnlineRechargeAdd,
  method: RpcSDKManagePaymentOnlineRechargeAdd.RpcSDKManagePaymentOnlineRechargeAddMethod,
  type: RpcSDKManagePaymentOnlineRechargeAdd.RpcSDKManagePaymentOnlineRechargeAddRpcType,
  params: [
    'merchantNo',
    'quota',
    'effectiveTime',
    'endTime'
  ]
};
RpcMap[RpcSDKManagePaymentOnlineRechargeAddQuota.RpcSDKManagePaymentOnlineRechargeAddQuotaMethod] = {
  rpc: RpcSDKManagePaymentOnlineRechargeAddQuota.RpcSDKManagePaymentOnlineRechargeAddQuota,
  method: RpcSDKManagePaymentOnlineRechargeAddQuota.RpcSDKManagePaymentOnlineRechargeAddQuotaMethod,
  type: RpcSDKManagePaymentOnlineRechargeAddQuota.RpcSDKManagePaymentOnlineRechargeAddQuotaRpcType,
  params: [
    'merchantNo',
    'quota'
  ]
};
RpcMap[RpcSDKManagePaymentOnlineRechargeDelete.RpcSDKManagePaymentOnlineRechargeDeleteMethod] = {
  rpc: RpcSDKManagePaymentOnlineRechargeDelete.RpcSDKManagePaymentOnlineRechargeDelete,
  method: RpcSDKManagePaymentOnlineRechargeDelete.RpcSDKManagePaymentOnlineRechargeDeleteMethod,
  type: RpcSDKManagePaymentOnlineRechargeDelete.RpcSDKManagePaymentOnlineRechargeDeleteRpcType,
  params: [
    'merchantNo'
  ]
};
RpcMap[RpcSDKManagePaymentOnlineRechargeQueryChange.RpcSDKManagePaymentOnlineRechargeQueryChangeMethod] = {
  rpc: RpcSDKManagePaymentOnlineRechargeQueryChange.RpcSDKManagePaymentOnlineRechargeQueryChange,
  method: RpcSDKManagePaymentOnlineRechargeQueryChange.RpcSDKManagePaymentOnlineRechargeQueryChangeMethod,
  type: RpcSDKManagePaymentOnlineRechargeQueryChange.RpcSDKManagePaymentOnlineRechargeQueryChangeRpcType,
  params: [
    'merchantNo',
    'queryTimeStart',
    'queryTimeEnd'
  ]
};
RpcMap[RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransactionMethod] = {
  rpc: RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction,
  method: RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransactionMethod,
  type: RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaConsumeTransactionRpcType,
  params: [
    'merchantNo',
    'tradeFlowOfPayMini',
    'prePaidCardId',
    'tradeType',
    'tradeTimeStart',
    'tradeTimeEnd',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransactionMethod] = {
  rpc: RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction,
  method: RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransactionMethod,
  type: RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransaction.RpcSDKManagePaymentOnlineRechargeQueryQuotaRechargeTransactionRpcType,
  params: [
    'merchantNo',
    'id',
    'operateTimeStart',
    'operateTimeEnd',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManagePaymentPosAdd.RpcSDKManagePaymentPosAddMethod] = {
  rpc: RpcSDKManagePaymentPosAdd.RpcSDKManagePaymentPosAdd,
  method: RpcSDKManagePaymentPosAdd.RpcSDKManagePaymentPosAddMethod,
  type: RpcSDKManagePaymentPosAdd.RpcSDKManagePaymentPosAddRpcType,
  params: [
    'merchantNo',
    'terminalType',
    'terminalMerchantNo',
    'safeTerminalNo',
    'prepaidTerminalNo',
    'bankTerminalNo',
    'peoplePayTerminalNo',
    'shopPayTerminalNo',
    'snCode'
  ]
};
RpcMap[RpcSDKManagePaymentPosDelete.RpcSDKManagePaymentPosDeleteMethod] = {
  rpc: RpcSDKManagePaymentPosDelete.RpcSDKManagePaymentPosDelete,
  method: RpcSDKManagePaymentPosDelete.RpcSDKManagePaymentPosDeleteMethod,
  type: RpcSDKManagePaymentPosDelete.RpcSDKManagePaymentPosDeleteRpcType,
  params: [
    'merchantNo',
    'id'
  ]
};
RpcMap[RpcSDKManagePaymentPosDetail.RpcSDKManagePaymentPosDetailMethod] = {
  rpc: RpcSDKManagePaymentPosDetail.RpcSDKManagePaymentPosDetail,
  method: RpcSDKManagePaymentPosDetail.RpcSDKManagePaymentPosDetailMethod,
  type: RpcSDKManagePaymentPosDetail.RpcSDKManagePaymentPosDetailRpcType,
  params: [
    'merchantNo',
    'ID',
    'startDate',
    'endDate',
    'tradeType',
    'tradeSubType',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManagePaymentPosExport.RpcSDKManagePaymentPosExportMethod] = {
  rpc: RpcSDKManagePaymentPosExport.RpcSDKManagePaymentPosExport,
  method: RpcSDKManagePaymentPosExport.RpcSDKManagePaymentPosExportMethod,
  type: RpcSDKManagePaymentPosExport.RpcSDKManagePaymentPosExportRpcType,
  params: [
    'merchantNo',
    'ID',
    'startDate',
    'endDate',
    'tradeType',
    'tradeSubType'
  ]
};
RpcMap[RpcSDKManagePaymentPosModify.RpcSDKManagePaymentPosModifyMethod] = {
  rpc: RpcSDKManagePaymentPosModify.RpcSDKManagePaymentPosModify,
  method: RpcSDKManagePaymentPosModify.RpcSDKManagePaymentPosModifyMethod,
  type: RpcSDKManagePaymentPosModify.RpcSDKManagePaymentPosModifyRpcType,
  params: [
    'id',
    'merchantNo',
    'terminalType',
    'terminalMerchantNo',
    'safeTerminalNo',
    'prepaidTerminalNo',
    'bankTerminalNo',
    'peoplePayTerminalNo',
    'shopPayTerminalNo',
    'snCode'
  ]
};
RpcMap[RpcSDKManagePaymentPosQuery.RpcSDKManagePaymentPosQueryMethod] = {
  rpc: RpcSDKManagePaymentPosQuery.RpcSDKManagePaymentPosQuery,
  method: RpcSDKManagePaymentPosQuery.RpcSDKManagePaymentPosQueryMethod,
  type: RpcSDKManagePaymentPosQuery.RpcSDKManagePaymentPosQueryRpcType,
  params: [
    'merchantNo',
    'terminalType',
    'terminalMerchantNo',
    'safeTerminalNo',
    'prepaidTerminalNo',
    'bankTerminalNo',
    'peoplePayTerminalNo',
    'shopPayTerminalNo',
    'snCode',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManagePaymentQuery.RpcSDKManagePaymentQueryMethod] = {
  rpc: RpcSDKManagePaymentQuery.RpcSDKManagePaymentQuery,
  method: RpcSDKManagePaymentQuery.RpcSDKManagePaymentQueryMethod,
  type: RpcSDKManagePaymentQuery.RpcSDKManagePaymentQueryRpcType,
  params: [
    'paymentProductType',
    'status',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManagePermissionAdd.RpcSDKManagePermissionAddMethod] = {
  rpc: RpcSDKManagePermissionAdd.RpcSDKManagePermissionAdd,
  method: RpcSDKManagePermissionAdd.RpcSDKManagePermissionAddMethod,
  type: RpcSDKManagePermissionAdd.RpcSDKManagePermissionAddRpcType,
  params: [
    'permissionKey'
  ]
};
RpcMap[RpcSDKManagePermissionDelete.RpcSDKManagePermissionDeleteMethod] = {
  rpc: RpcSDKManagePermissionDelete.RpcSDKManagePermissionDelete,
  method: RpcSDKManagePermissionDelete.RpcSDKManagePermissionDeleteMethod,
  type: RpcSDKManagePermissionDelete.RpcSDKManagePermissionDeleteRpcType,
  params: [
    'permissionId'
  ]
};
RpcMap[RpcSDKManagePermissionQuery.RpcSDKManagePermissionQueryMethod] = {
  rpc: RpcSDKManagePermissionQuery.RpcSDKManagePermissionQuery,
  method: RpcSDKManagePermissionQuery.RpcSDKManagePermissionQueryMethod,
  type: RpcSDKManagePermissionQuery.RpcSDKManagePermissionQueryRpcType,
  params: [
    'permissionId',
    'permissionKey'
  ]
};
RpcMap[RpcSDKManagePrePaidCardCardBinApplyEntityCardBin.RpcSDKManagePrePaidCardCardBinApplyEntityCardBinMethod] = {
  rpc: RpcSDKManagePrePaidCardCardBinApplyEntityCardBin.RpcSDKManagePrePaidCardCardBinApplyEntityCardBin,
  method: RpcSDKManagePrePaidCardCardBinApplyEntityCardBin.RpcSDKManagePrePaidCardCardBinApplyEntityCardBinMethod,
  type: RpcSDKManagePrePaidCardCardBinApplyEntityCardBin.RpcSDKManagePrePaidCardCardBinApplyEntityCardBinRpcType,
  params: [
    'merchantNo',
    'count'
  ]
};
RpcMap[RpcSDKManagePrePaidCardCardBinQuery.RpcSDKManagePrePaidCardCardBinQueryMethod] = {
  rpc: RpcSDKManagePrePaidCardCardBinQuery.RpcSDKManagePrePaidCardCardBinQuery,
  method: RpcSDKManagePrePaidCardCardBinQuery.RpcSDKManagePrePaidCardCardBinQueryMethod,
  type: RpcSDKManagePrePaidCardCardBinQuery.RpcSDKManagePrePaidCardCardBinQueryRpcType,
  params: [
    'merchantNo',
    'cardBin',
    'cardBinType',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManagePrePaidCardFabricationApply.RpcSDKManagePrePaidCardFabricationApplyMethod] = {
  rpc: RpcSDKManagePrePaidCardFabricationApply.RpcSDKManagePrePaidCardFabricationApply,
  method: RpcSDKManagePrePaidCardFabricationApply.RpcSDKManagePrePaidCardFabricationApplyMethod,
  type: RpcSDKManagePrePaidCardFabricationApply.RpcSDKManagePrePaidCardFabricationApplyRpcType,
  params: [
    'merchantNo',
    'cardTypeId',
    'cardBinType',
    'count'
  ]
};
RpcMap[RpcSDKManagePrePaidCardFabricationDelete.RpcSDKManagePrePaidCardFabricationDeleteMethod] = {
  rpc: RpcSDKManagePrePaidCardFabricationDelete.RpcSDKManagePrePaidCardFabricationDelete,
  method: RpcSDKManagePrePaidCardFabricationDelete.RpcSDKManagePrePaidCardFabricationDeleteMethod,
  type: RpcSDKManagePrePaidCardFabricationDelete.RpcSDKManagePrePaidCardFabricationDeleteRpcType,
  params: [
    'fabricationBatchId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardFabricationExport.RpcSDKManagePrePaidCardFabricationExportMethod] = {
  rpc: RpcSDKManagePrePaidCardFabricationExport.RpcSDKManagePrePaidCardFabricationExport,
  method: RpcSDKManagePrePaidCardFabricationExport.RpcSDKManagePrePaidCardFabricationExportMethod,
  type: RpcSDKManagePrePaidCardFabricationExport.RpcSDKManagePrePaidCardFabricationExportRpcType,
  params: [
    'fabricationBatchId',
    'merchantNo'
  ]
};
RpcMap[RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail.RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetailMethod] = {
  rpc: RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail.RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail,
  method: RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail.RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetailMethod,
  type: RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetail.RpcSDKManagePrePaidCardFabricationInformationQueryFabricationDetailRpcType,
  params: [
    'prePaidCardId',
    'fabricationBatchId',
    'merchantNo',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManagePrePaidCardFabricationMake.RpcSDKManagePrePaidCardFabricationMakeMethod] = {
  rpc: RpcSDKManagePrePaidCardFabricationMake.RpcSDKManagePrePaidCardFabricationMake,
  method: RpcSDKManagePrePaidCardFabricationMake.RpcSDKManagePrePaidCardFabricationMakeMethod,
  type: RpcSDKManagePrePaidCardFabricationMake.RpcSDKManagePrePaidCardFabricationMakeRpcType,
  params: [
    'fabricationBatchId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardFabricationQuery.RpcSDKManagePrePaidCardFabricationQueryMethod] = {
  rpc: RpcSDKManagePrePaidCardFabricationQuery.RpcSDKManagePrePaidCardFabricationQuery,
  method: RpcSDKManagePrePaidCardFabricationQuery.RpcSDKManagePrePaidCardFabricationQueryMethod,
  type: RpcSDKManagePrePaidCardFabricationQuery.RpcSDKManagePrePaidCardFabricationQueryRpcType,
  params: [
    'fabricationBatchId',
    'merchantNo',
    'cardBin',
    'cardTypeId',
    'cardBinType',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManagePrePaidCardQuery.RpcSDKManagePrePaidCardQueryMethod] = {
  rpc: RpcSDKManagePrePaidCardQuery.RpcSDKManagePrePaidCardQuery,
  method: RpcSDKManagePrePaidCardQuery.RpcSDKManagePrePaidCardQueryMethod,
  type: RpcSDKManagePrePaidCardQuery.RpcSDKManagePrePaidCardQueryRpcType,
  params: [
    'prePaidCardId',
    'merchantNo',
    'cardTypeId',
    'cardBinType',
    'isSold',
    'isActive',
    'isBinding',
    'activeDateStart',
    'activeDateEnd',
    'expireDateStart',
    'expireDateEnd',
    'status',
    'cellphone',
    'name',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeOnlineRechargeBatch.RpcSDKManagePrePaidCardTradeOnlineRechargeBatchMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeOnlineRechargeBatch.RpcSDKManagePrePaidCardTradeOnlineRechargeBatch,
  method: RpcSDKManagePrePaidCardTradeOnlineRechargeBatch.RpcSDKManagePrePaidCardTradeOnlineRechargeBatchMethod,
  type: RpcSDKManagePrePaidCardTradeOnlineRechargeBatch.RpcSDKManagePrePaidCardTradeOnlineRechargeBatchRpcType,
  params: [
    'prePaidCardIds',
    'amountVirtual'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeOnlineRechargeSingle.RpcSDKManagePrePaidCardTradeOnlineRechargeSingleMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeOnlineRechargeSingle.RpcSDKManagePrePaidCardTradeOnlineRechargeSingle,
  method: RpcSDKManagePrePaidCardTradeOnlineRechargeSingle.RpcSDKManagePrePaidCardTradeOnlineRechargeSingleMethod,
  type: RpcSDKManagePrePaidCardTradeOnlineRechargeSingle.RpcSDKManagePrePaidCardTradeOnlineRechargeSingleRpcType,
  params: [
    'prePaidCardId',
    'amountVirtual'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeReDrawBatch.RpcSDKManagePrePaidCardTradeReDrawBatchMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeReDrawBatch.RpcSDKManagePrePaidCardTradeReDrawBatch,
  method: RpcSDKManagePrePaidCardTradeReDrawBatch.RpcSDKManagePrePaidCardTradeReDrawBatchMethod,
  type: RpcSDKManagePrePaidCardTradeReDrawBatch.RpcSDKManagePrePaidCardTradeReDrawBatchRpcType,
  params: [
    'tradeFlowOfPayMinis'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeReDrawSingle.RpcSDKManagePrePaidCardTradeReDrawSingleMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeReDrawSingle.RpcSDKManagePrePaidCardTradeReDrawSingle,
  method: RpcSDKManagePrePaidCardTradeReDrawSingle.RpcSDKManagePrePaidCardTradeReDrawSingleMethod,
  type: RpcSDKManagePrePaidCardTradeReDrawSingle.RpcSDKManagePrePaidCardTradeReDrawSingleRpcType,
  params: [
    'tradeFlowOfPayMini'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeSellCard.RpcSDKManagePrePaidCardTradeSellCardMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeSellCard.RpcSDKManagePrePaidCardTradeSellCard,
  method: RpcSDKManagePrePaidCardTradeSellCard.RpcSDKManagePrePaidCardTradeSellCardMethod,
  type: RpcSDKManagePrePaidCardTradeSellCard.RpcSDKManagePrePaidCardTradeSellCardRpcType,
  params: [
    'memberId',
    'prePaidCardId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeSellCardByCellphone.RpcSDKManagePrePaidCardTradeSellCardByCellphoneMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeSellCardByCellphone.RpcSDKManagePrePaidCardTradeSellCardByCellphone,
  method: RpcSDKManagePrePaidCardTradeSellCardByCellphone.RpcSDKManagePrePaidCardTradeSellCardByCellphoneMethod,
  type: RpcSDKManagePrePaidCardTradeSellCardByCellphone.RpcSDKManagePrePaidCardTradeSellCardByCellphoneRpcType,
  params: [
    'cellphone',
    'prePaidCardId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeSellVirtualCard.RpcSDKManagePrePaidCardTradeSellVirtualCardMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeSellVirtualCard.RpcSDKManagePrePaidCardTradeSellVirtualCard,
  method: RpcSDKManagePrePaidCardTradeSellVirtualCard.RpcSDKManagePrePaidCardTradeSellVirtualCardMethod,
  type: RpcSDKManagePrePaidCardTradeSellVirtualCard.RpcSDKManagePrePaidCardTradeSellVirtualCardRpcType,
  params: [
    'merchantCardTypeId',
    'memberId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone.RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphoneMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone.RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone,
  method: RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone.RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphoneMethod,
  type: RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphone.RpcSDKManagePrePaidCardTradeSellVirtualCardWithCellphoneRpcType,
  params: [
    'merchantCardTypeId',
    'cellphone'
  ]
};
RpcMap[RpcSDKManagePrePaidCardTradeTransferAccount.RpcSDKManagePrePaidCardTradeTransferAccountMethod] = {
  rpc: RpcSDKManagePrePaidCardTradeTransferAccount.RpcSDKManagePrePaidCardTradeTransferAccount,
  method: RpcSDKManagePrePaidCardTradeTransferAccount.RpcSDKManagePrePaidCardTradeTransferAccountMethod,
  type: RpcSDKManagePrePaidCardTradeTransferAccount.RpcSDKManagePrePaidCardTradeTransferAccountRpcType,
  params: [
    'fromPrePaidCardId',
    'toPrePaidCardId',
    'amountCash',
    'amountVirtual'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageActive.RpcSDKManagePrePaidCardUsageActiveMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageActive.RpcSDKManagePrePaidCardUsageActive,
  method: RpcSDKManagePrePaidCardUsageActive.RpcSDKManagePrePaidCardUsageActiveMethod,
  type: RpcSDKManagePrePaidCardUsageActive.RpcSDKManagePrePaidCardUsageActiveRpcType,
  params: [
    'prePaidCardId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageBindToMember.RpcSDKManagePrePaidCardUsageBindToMemberMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageBindToMember.RpcSDKManagePrePaidCardUsageBindToMember,
  method: RpcSDKManagePrePaidCardUsageBindToMember.RpcSDKManagePrePaidCardUsageBindToMemberMethod,
  type: RpcSDKManagePrePaidCardUsageBindToMember.RpcSDKManagePrePaidCardUsageBindToMemberRpcType,
  params: [
    'prePaidCardId',
    'memberId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageDeActivate.RpcSDKManagePrePaidCardUsageDeActivateMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageDeActivate.RpcSDKManagePrePaidCardUsageDeActivate,
  method: RpcSDKManagePrePaidCardUsageDeActivate.RpcSDKManagePrePaidCardUsageDeActivateMethod,
  type: RpcSDKManagePrePaidCardUsageDeActivate.RpcSDKManagePrePaidCardUsageDeActivateRpcType,
  params: [
    'prePaidCardId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageExportActiveCard.RpcSDKManagePrePaidCardUsageExportActiveCardMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageExportActiveCard.RpcSDKManagePrePaidCardUsageExportActiveCard,
  method: RpcSDKManagePrePaidCardUsageExportActiveCard.RpcSDKManagePrePaidCardUsageExportActiveCardMethod,
  type: RpcSDKManagePrePaidCardUsageExportActiveCard.RpcSDKManagePrePaidCardUsageExportActiveCardRpcType,
  params: [
    'merchantNo',
    'startDate',
    'endDate'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageFreeze.RpcSDKManagePrePaidCardUsageFreezeMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageFreeze.RpcSDKManagePrePaidCardUsageFreeze,
  method: RpcSDKManagePrePaidCardUsageFreeze.RpcSDKManagePrePaidCardUsageFreezeMethod,
  type: RpcSDKManagePrePaidCardUsageFreeze.RpcSDKManagePrePaidCardUsageFreezeRpcType,
  params: [
    'prePaidCardId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageMakeUpCard.RpcSDKManagePrePaidCardUsageMakeUpCardMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageMakeUpCard.RpcSDKManagePrePaidCardUsageMakeUpCard,
  method: RpcSDKManagePrePaidCardUsageMakeUpCard.RpcSDKManagePrePaidCardUsageMakeUpCardMethod,
  type: RpcSDKManagePrePaidCardUsageMakeUpCard.RpcSDKManagePrePaidCardUsageMakeUpCardRpcType,
  params: [
    'oldPrePaidCardId',
    'newPrePaidCardId'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageModifyPassword.RpcSDKManagePrePaidCardUsageModifyPasswordMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageModifyPassword.RpcSDKManagePrePaidCardUsageModifyPassword,
  method: RpcSDKManagePrePaidCardUsageModifyPassword.RpcSDKManagePrePaidCardUsageModifyPasswordMethod,
  type: RpcSDKManagePrePaidCardUsageModifyPassword.RpcSDKManagePrePaidCardUsageModifyPasswordRpcType,
  params: [
    'prePaidCardId',
    'newPassword',
    'oldPassword',
    'verifyCode'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageResetPassword.RpcSDKManagePrePaidCardUsageResetPasswordMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageResetPassword.RpcSDKManagePrePaidCardUsageResetPassword,
  method: RpcSDKManagePrePaidCardUsageResetPassword.RpcSDKManagePrePaidCardUsageResetPasswordMethod,
  type: RpcSDKManagePrePaidCardUsageResetPassword.RpcSDKManagePrePaidCardUsageResetPasswordRpcType,
  params: [
    'prePaidCardId',
    'password',
    'verifyCode'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageUnBind.RpcSDKManagePrePaidCardUsageUnBindMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageUnBind.RpcSDKManagePrePaidCardUsageUnBind,
  method: RpcSDKManagePrePaidCardUsageUnBind.RpcSDKManagePrePaidCardUsageUnBindMethod,
  type: RpcSDKManagePrePaidCardUsageUnBind.RpcSDKManagePrePaidCardUsageUnBindRpcType,
  params: [
    'prePaidCardId',
    'verifyCode'
  ]
};
RpcMap[RpcSDKManagePrePaidCardUsageUnFreeze.RpcSDKManagePrePaidCardUsageUnFreezeMethod] = {
  rpc: RpcSDKManagePrePaidCardUsageUnFreeze.RpcSDKManagePrePaidCardUsageUnFreeze,
  method: RpcSDKManagePrePaidCardUsageUnFreeze.RpcSDKManagePrePaidCardUsageUnFreezeMethod,
  type: RpcSDKManagePrePaidCardUsageUnFreeze.RpcSDKManagePrePaidCardUsageUnFreezeRpcType,
  params: [
    'prePaidCardId'
  ]
};
RpcMap[RpcSDKManageProfitSharingSalesmanAdd.RpcSDKManageProfitSharingSalesmanAddMethod] = {
  rpc: RpcSDKManageProfitSharingSalesmanAdd.RpcSDKManageProfitSharingSalesmanAdd,
  method: RpcSDKManageProfitSharingSalesmanAdd.RpcSDKManageProfitSharingSalesmanAddMethod,
  type: RpcSDKManageProfitSharingSalesmanAdd.RpcSDKManageProfitSharingSalesmanAddRpcType,
  params: [
    'merchantNO',
    'profitSharingRate',
    'memberId'
  ]
};
RpcMap[RpcSDKManageProfitSharingSalesmanDelete.RpcSDKManageProfitSharingSalesmanDeleteMethod] = {
  rpc: RpcSDKManageProfitSharingSalesmanDelete.RpcSDKManageProfitSharingSalesmanDelete,
  method: RpcSDKManageProfitSharingSalesmanDelete.RpcSDKManageProfitSharingSalesmanDeleteMethod,
  type: RpcSDKManageProfitSharingSalesmanDelete.RpcSDKManageProfitSharingSalesmanDeleteRpcType,
  params: [
    'id'
  ]
};
RpcMap[RpcSDKManageProfitSharingSalesmanModify.RpcSDKManageProfitSharingSalesmanModifyMethod] = {
  rpc: RpcSDKManageProfitSharingSalesmanModify.RpcSDKManageProfitSharingSalesmanModify,
  method: RpcSDKManageProfitSharingSalesmanModify.RpcSDKManageProfitSharingSalesmanModifyMethod,
  type: RpcSDKManageProfitSharingSalesmanModify.RpcSDKManageProfitSharingSalesmanModifyRpcType,
  params: [
    'id',
    'profitSharingRate'
  ]
};
RpcMap[RpcSDKManageProfitSharingSalesmanQueryByMember.RpcSDKManageProfitSharingSalesmanQueryByMemberMethod] = {
  rpc: RpcSDKManageProfitSharingSalesmanQueryByMember.RpcSDKManageProfitSharingSalesmanQueryByMember,
  method: RpcSDKManageProfitSharingSalesmanQueryByMember.RpcSDKManageProfitSharingSalesmanQueryByMemberMethod,
  type: RpcSDKManageProfitSharingSalesmanQueryByMember.RpcSDKManageProfitSharingSalesmanQueryByMemberRpcType,
  params: [
    'memberId',
    'pageIdx',
    'pageNum'
  ]
};
RpcMap[RpcSDKManageProfitSharingSalesmanQueryByMerchant.RpcSDKManageProfitSharingSalesmanQueryByMerchantMethod] = {
  rpc: RpcSDKManageProfitSharingSalesmanQueryByMerchant.RpcSDKManageProfitSharingSalesmanQueryByMerchant,
  method: RpcSDKManageProfitSharingSalesmanQueryByMerchant.RpcSDKManageProfitSharingSalesmanQueryByMerchantMethod,
  type: RpcSDKManageProfitSharingSalesmanQueryByMerchant.RpcSDKManageProfitSharingSalesmanQueryByMerchantRpcType,
  params: [
    'merchantNo',
    'pageIdx',
    'pageNum'
  ]
};
RpcMap[RpcSDKManageRequestVerify.RpcSDKManageRequestVerifyMethod] = {
  rpc: RpcSDKManageRequestVerify.RpcSDKManageRequestVerify,
  method: RpcSDKManageRequestVerify.RpcSDKManageRequestVerifyMethod,
  type: RpcSDKManageRequestVerify.RpcSDKManageRequestVerifyRpcType,
  params: [
    'verifyType'
  ]
};
RpcMap[RpcSDKManageReviewActivityQuery.RpcSDKManageReviewActivityQueryMethod] = {
  rpc: RpcSDKManageReviewActivityQuery.RpcSDKManageReviewActivityQuery,
  method: RpcSDKManageReviewActivityQuery.RpcSDKManageReviewActivityQueryMethod,
  type: RpcSDKManageReviewActivityQuery.RpcSDKManageReviewActivityQueryRpcType,
  params: [
    'ID'
  ]
};
RpcMap[RpcSDKManageReviewDelete.RpcSDKManageReviewDeleteMethod] = {
  rpc: RpcSDKManageReviewDelete.RpcSDKManageReviewDelete,
  method: RpcSDKManageReviewDelete.RpcSDKManageReviewDeleteMethod,
  type: RpcSDKManageReviewDelete.RpcSDKManageReviewDeleteRpcType,
  params: [
    'reviewId',
    'reviewType'
  ]
};
RpcMap[RpcSDKManageReviewFabricationCardQuery.RpcSDKManageReviewFabricationCardQueryMethod] = {
  rpc: RpcSDKManageReviewFabricationCardQuery.RpcSDKManageReviewFabricationCardQuery,
  method: RpcSDKManageReviewFabricationCardQuery.RpcSDKManageReviewFabricationCardQueryMethod,
  type: RpcSDKManageReviewFabricationCardQuery.RpcSDKManageReviewFabricationCardQueryRpcType,
  params: [
    'ID',
    'fabricationBatchId',
    'cardTypeId'
  ]
};
RpcMap[RpcSDKManageReviewFactorageQuery.RpcSDKManageReviewFactorageQueryMethod] = {
  rpc: RpcSDKManageReviewFactorageQuery.RpcSDKManageReviewFactorageQuery,
  method: RpcSDKManageReviewFactorageQuery.RpcSDKManageReviewFactorageQueryMethod,
  type: RpcSDKManageReviewFactorageQuery.RpcSDKManageReviewFactorageQueryRpcType,
  params: [
    'ID'
  ]
};
RpcMap[RpcSDKManageReviewModify.RpcSDKManageReviewModifyMethod] = {
  rpc: RpcSDKManageReviewModify.RpcSDKManageReviewModify,
  method: RpcSDKManageReviewModify.RpcSDKManageReviewModifyMethod,
  type: RpcSDKManageReviewModify.RpcSDKManageReviewModifyRpcType,
  params: [
    'reviewId',
    'reviewType',
    'note'
  ]
};
RpcMap[RpcSDKManageReviewPaymentProductQuery.RpcSDKManageReviewPaymentProductQueryMethod] = {
  rpc: RpcSDKManageReviewPaymentProductQuery.RpcSDKManageReviewPaymentProductQuery,
  method: RpcSDKManageReviewPaymentProductQuery.RpcSDKManageReviewPaymentProductQueryMethod,
  type: RpcSDKManageReviewPaymentProductQuery.RpcSDKManageReviewPaymentProductQueryRpcType,
  params: [
    'ID'
  ]
};
RpcMap[RpcSDKManageReviewPermissionAdd.RpcSDKManageReviewPermissionAddMethod] = {
  rpc: RpcSDKManageReviewPermissionAdd.RpcSDKManageReviewPermissionAdd,
  method: RpcSDKManageReviewPermissionAdd.RpcSDKManageReviewPermissionAddMethod,
  type: RpcSDKManageReviewPermissionAdd.RpcSDKManageReviewPermissionAddRpcType,
  params: [
    'merchantNo',
    'cellphone'
  ]
};
RpcMap[RpcSDKManageReviewPermissionDelete.RpcSDKManageReviewPermissionDeleteMethod] = {
  rpc: RpcSDKManageReviewPermissionDelete.RpcSDKManageReviewPermissionDelete,
  method: RpcSDKManageReviewPermissionDelete.RpcSDKManageReviewPermissionDeleteMethod,
  type: RpcSDKManageReviewPermissionDelete.RpcSDKManageReviewPermissionDeleteRpcType,
  params: [
    'merchantNo',
    'cellphone'
  ]
};
RpcMap[RpcSDKManageReviewPermissionFreeze.RpcSDKManageReviewPermissionFreezeMethod] = {
  rpc: RpcSDKManageReviewPermissionFreeze.RpcSDKManageReviewPermissionFreeze,
  method: RpcSDKManageReviewPermissionFreeze.RpcSDKManageReviewPermissionFreezeMethod,
  type: RpcSDKManageReviewPermissionFreeze.RpcSDKManageReviewPermissionFreezeRpcType,
  params: [
    'merchantNo',
    'cellphone'
  ]
};
RpcMap[RpcSDKManageReviewPermissionQuery.RpcSDKManageReviewPermissionQueryMethod] = {
  rpc: RpcSDKManageReviewPermissionQuery.RpcSDKManageReviewPermissionQuery,
  method: RpcSDKManageReviewPermissionQuery.RpcSDKManageReviewPermissionQueryMethod,
  type: RpcSDKManageReviewPermissionQuery.RpcSDKManageReviewPermissionQueryRpcType,
  params: [
    'ID',
    'merchantNo',
    'cellphone',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageReviewPermissionUnFreeze.RpcSDKManageReviewPermissionUnFreezeMethod] = {
  rpc: RpcSDKManageReviewPermissionUnFreeze.RpcSDKManageReviewPermissionUnFreeze,
  method: RpcSDKManageReviewPermissionUnFreeze.RpcSDKManageReviewPermissionUnFreezeMethod,
  type: RpcSDKManageReviewPermissionUnFreeze.RpcSDKManageReviewPermissionUnFreezeRpcType,
  params: [
    'merchantNo',
    'cellphone'
  ]
};
RpcMap[RpcSDKManageReviewQueryCenterReview.RpcSDKManageReviewQueryCenterReviewMethod] = {
  rpc: RpcSDKManageReviewQueryCenterReview.RpcSDKManageReviewQueryCenterReview,
  method: RpcSDKManageReviewQueryCenterReview.RpcSDKManageReviewQueryCenterReviewMethod,
  type: RpcSDKManageReviewQueryCenterReview.RpcSDKManageReviewQueryCenterReviewRpcType,
  params: [
    'reviewId',
    'reviewType',
    'reviewRecordId',
    'result',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageReviewQuerySDKManageReview.RpcSDKManageReviewQuerySDKManageReviewMethod] = {
  rpc: RpcSDKManageReviewQuerySDKManageReview.RpcSDKManageReviewQuerySDKManageReview,
  method: RpcSDKManageReviewQuerySDKManageReview.RpcSDKManageReviewQuerySDKManageReviewMethod,
  type: RpcSDKManageReviewQuerySDKManageReview.RpcSDKManageReviewQuerySDKManageReviewRpcType,
  params: [
    'reviewId',
    'reviewType',
    'reviewRecordId',
    'result',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageReviewReview.RpcSDKManageReviewReviewMethod] = {
  rpc: RpcSDKManageReviewReview.RpcSDKManageReviewReview,
  method: RpcSDKManageReviewReview.RpcSDKManageReviewReviewMethod,
  type: RpcSDKManageReviewReview.RpcSDKManageReviewReviewRpcType,
  params: [
    'reviewId',
    'reviewType'
  ]
};
RpcMap[RpcSDKManageSmsRequestLoginVerifyCodeWithUserName.RpcSDKManageSmsRequestLoginVerifyCodeWithUserNameMethod] = {
  rpc: RpcSDKManageSmsRequestLoginVerifyCodeWithUserName.RpcSDKManageSmsRequestLoginVerifyCodeWithUserName,
  method: RpcSDKManageSmsRequestLoginVerifyCodeWithUserName.RpcSDKManageSmsRequestLoginVerifyCodeWithUserNameMethod,
  type: RpcSDKManageSmsRequestLoginVerifyCodeWithUserName.RpcSDKManageSmsRequestLoginVerifyCodeWithUserNameRpcType,
  params: [
    'userName'
  ]
};
RpcMap[RpcSDKManageSmsRequestVerify.RpcSDKManageSmsRequestVerifyMethod] = {
  rpc: RpcSDKManageSmsRequestVerify.RpcSDKManageSmsRequestVerify,
  method: RpcSDKManageSmsRequestVerify.RpcSDKManageSmsRequestVerifyMethod,
  type: RpcSDKManageSmsRequestVerify.RpcSDKManageSmsRequestVerifyRpcType,
  params: [
    'cellphone',
    'verifyType'
  ]
};
RpcMap[RpcSDKManageSystemAlarmDelete.RpcSDKManageSystemAlarmDeleteMethod] = {
  rpc: RpcSDKManageSystemAlarmDelete.RpcSDKManageSystemAlarmDelete,
  method: RpcSDKManageSystemAlarmDelete.RpcSDKManageSystemAlarmDeleteMethod,
  type: RpcSDKManageSystemAlarmDelete.RpcSDKManageSystemAlarmDeleteRpcType,
  params: [
    'alarmId'
  ]
};
RpcMap[RpcSDKManageSystemAlarmDetail.RpcSDKManageSystemAlarmDetailMethod] = {
  rpc: RpcSDKManageSystemAlarmDetail.RpcSDKManageSystemAlarmDetail,
  method: RpcSDKManageSystemAlarmDetail.RpcSDKManageSystemAlarmDetailMethod,
  type: RpcSDKManageSystemAlarmDetail.RpcSDKManageSystemAlarmDetailRpcType,
  params: [
    'alarmId',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManageSystemAlarmModify.RpcSDKManageSystemAlarmModifyMethod] = {
  rpc: RpcSDKManageSystemAlarmModify.RpcSDKManageSystemAlarmModify,
  method: RpcSDKManageSystemAlarmModify.RpcSDKManageSystemAlarmModifyMethod,
  type: RpcSDKManageSystemAlarmModify.RpcSDKManageSystemAlarmModifyRpcType,
  params: [
    'alarmId',
    'earlyWaringSet'
  ]
};
RpcMap[RpcSDKManageSystemAlarmQuery.RpcSDKManageSystemAlarmQueryMethod] = {
  rpc: RpcSDKManageSystemAlarmQuery.RpcSDKManageSystemAlarmQuery,
  method: RpcSDKManageSystemAlarmQuery.RpcSDKManageSystemAlarmQueryMethod,
  type: RpcSDKManageSystemAlarmQuery.RpcSDKManageSystemAlarmQueryRpcType,
  params: [
    'alarmType',
    'earlyWaringSet'
  ]
};
RpcMap[RpcSDKManageSystemMessageDelete.RpcSDKManageSystemMessageDeleteMethod] = {
  rpc: RpcSDKManageSystemMessageDelete.RpcSDKManageSystemMessageDelete,
  method: RpcSDKManageSystemMessageDelete.RpcSDKManageSystemMessageDeleteMethod,
  type: RpcSDKManageSystemMessageDelete.RpcSDKManageSystemMessageDeleteRpcType,
  params: [
    'messageId'
  ]
};
RpcMap[RpcSDKManageSystemMessageMark.RpcSDKManageSystemMessageMarkMethod] = {
  rpc: RpcSDKManageSystemMessageMark.RpcSDKManageSystemMessageMark,
  method: RpcSDKManageSystemMessageMark.RpcSDKManageSystemMessageMarkMethod,
  type: RpcSDKManageSystemMessageMark.RpcSDKManageSystemMessageMarkRpcType,
  params: [
    'messageId'
  ]
};
RpcMap[RpcSDKManageSystemMessageQuery.RpcSDKManageSystemMessageQueryMethod] = {
  rpc: RpcSDKManageSystemMessageQuery.RpcSDKManageSystemMessageQuery,
  method: RpcSDKManageSystemMessageQuery.RpcSDKManageSystemMessageQueryMethod,
  type: RpcSDKManageSystemMessageQuery.RpcSDKManageSystemMessageQueryRpcType,
  params: [
    'messageType',
    'readFlag',
    'senderMemberId',
    'receiverMemberId',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageSystemMessageSend.RpcSDKManageSystemMessageSendMethod] = {
  rpc: RpcSDKManageSystemMessageSend.RpcSDKManageSystemMessageSend,
  method: RpcSDKManageSystemMessageSend.RpcSDKManageSystemMessageSendMethod,
  type: RpcSDKManageSystemMessageSend.RpcSDKManageSystemMessageSendRpcType,
  params: [
    'messageType',
    'receiverMemberId',
    'title',
    'content'
  ]
};
RpcMap[RpcSDKManageSystemNoticeAdd.RpcSDKManageSystemNoticeAddMethod] = {
  rpc: RpcSDKManageSystemNoticeAdd.RpcSDKManageSystemNoticeAdd,
  method: RpcSDKManageSystemNoticeAdd.RpcSDKManageSystemNoticeAddMethod,
  type: RpcSDKManageSystemNoticeAdd.RpcSDKManageSystemNoticeAddRpcType,
  params: [
    'title',
    'content',
    'effecttiveDate',
    'endDate'
  ]
};
RpcMap[RpcSDKManageSystemNoticeDelete.RpcSDKManageSystemNoticeDeleteMethod] = {
  rpc: RpcSDKManageSystemNoticeDelete.RpcSDKManageSystemNoticeDelete,
  method: RpcSDKManageSystemNoticeDelete.RpcSDKManageSystemNoticeDeleteMethod,
  type: RpcSDKManageSystemNoticeDelete.RpcSDKManageSystemNoticeDeleteRpcType,
  params: [
    'noticeId'
  ]
};
RpcMap[RpcSDKManageSystemNoticeModify.RpcSDKManageSystemNoticeModifyMethod] = {
  rpc: RpcSDKManageSystemNoticeModify.RpcSDKManageSystemNoticeModify,
  method: RpcSDKManageSystemNoticeModify.RpcSDKManageSystemNoticeModifyMethod,
  type: RpcSDKManageSystemNoticeModify.RpcSDKManageSystemNoticeModifyRpcType,
  params: [
    'noticeId',
    'title',
    'content',
    'effecttiveDate',
    'endDate'
  ]
};
RpcMap[RpcSDKManageSystemNoticeQuery.RpcSDKManageSystemNoticeQueryMethod] = {
  rpc: RpcSDKManageSystemNoticeQuery.RpcSDKManageSystemNoticeQuery,
  method: RpcSDKManageSystemNoticeQuery.RpcSDKManageSystemNoticeQueryMethod,
  type: RpcSDKManageSystemNoticeQuery.RpcSDKManageSystemNoticeQueryRpcType,
  params: [
    'effecttiveDate',
    'endDate',
    'sortBy',
    'desc',
    'pageIndex',
    'pageCount'
  ]
};
RpcMap[RpcSDKManageTokenGetAccessToken.RpcSDKManageTokenGetAccessTokenMethod] = {
  rpc: RpcSDKManageTokenGetAccessToken.RpcSDKManageTokenGetAccessToken,
  method: RpcSDKManageTokenGetAccessToken.RpcSDKManageTokenGetAccessTokenMethod,
  type: RpcSDKManageTokenGetAccessToken.RpcSDKManageTokenGetAccessTokenRpcType,
  params: [
    'merchantNo',
    'refreshToken'
  ]
};
RpcMap[RpcSDKManageTokenGetRefreshToken.RpcSDKManageTokenGetRefreshTokenMethod] = {
  rpc: RpcSDKManageTokenGetRefreshToken.RpcSDKManageTokenGetRefreshToken,
  method: RpcSDKManageTokenGetRefreshToken.RpcSDKManageTokenGetRefreshTokenMethod,
  type: RpcSDKManageTokenGetRefreshToken.RpcSDKManageTokenGetRefreshTokenRpcType,
  params: [
    'merchantNo',
    'secretKey'
  ]
};
RpcMap[RpcSDKManageTransactionConsumptionExport.RpcSDKManageTransactionConsumptionExportMethod] = {
  rpc: RpcSDKManageTransactionConsumptionExport.RpcSDKManageTransactionConsumptionExport,
  method: RpcSDKManageTransactionConsumptionExport.RpcSDKManageTransactionConsumptionExportMethod,
  type: RpcSDKManageTransactionConsumptionExport.RpcSDKManageTransactionConsumptionExportRpcType,
  params: [
    'tradeFlowOfPayMini',
    'tradeType',
    'merchantNo',
    'prePaidCardId',
    'tradeSubType',
    'tradeTimeStart',
    'tradeTimeEnd',
    'posTerminalId',
    'isReDrew'
  ]
};
RpcMap[RpcSDKManageTransactionMakeUpPosMachineRecharge.RpcSDKManageTransactionMakeUpPosMachineRechargeMethod] = {
  rpc: RpcSDKManageTransactionMakeUpPosMachineRecharge.RpcSDKManageTransactionMakeUpPosMachineRecharge,
  method: RpcSDKManageTransactionMakeUpPosMachineRecharge.RpcSDKManageTransactionMakeUpPosMachineRechargeMethod,
  type: RpcSDKManageTransactionMakeUpPosMachineRecharge.RpcSDKManageTransactionMakeUpPosMachineRechargeRpcType,
  params: [
    'reorderId'
  ]
};
RpcMap[RpcSDKManageTransactionQuery.RpcSDKManageTransactionQueryMethod] = {
  rpc: RpcSDKManageTransactionQuery.RpcSDKManageTransactionQuery,
  method: RpcSDKManageTransactionQuery.RpcSDKManageTransactionQueryMethod,
  type: RpcSDKManageTransactionQuery.RpcSDKManageTransactionQueryRpcType,
  params: [
    'tradeFlowOfPayMini',
    'tradeType',
    'merchantNo',
    'prePaidCardId',
    'tradeSubType',
    'tradeTimeStart',
    'tradeTimeEnd',
    'posTerminalId',
    'isReDrew',
    'memberId',
    'cellphone',
    'name',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageTransactionRechargeReconcilation.RpcSDKManageTransactionRechargeReconcilationMethod] = {
  rpc: RpcSDKManageTransactionRechargeReconcilation.RpcSDKManageTransactionRechargeReconcilation,
  method: RpcSDKManageTransactionRechargeReconcilation.RpcSDKManageTransactionRechargeReconcilationMethod,
  type: RpcSDKManageTransactionRechargeReconcilation.RpcSDKManageTransactionRechargeReconcilationRpcType,
  params: [
  ]
};
RpcMap[RpcSDKManageUserAdd.RpcSDKManageUserAddMethod] = {
  rpc: RpcSDKManageUserAdd.RpcSDKManageUserAdd,
  method: RpcSDKManageUserAdd.RpcSDKManageUserAddMethod,
  type: RpcSDKManageUserAdd.RpcSDKManageUserAddRpcType,
  params: [
    'userName',
    'password',
    'memberId',
    'organizationId'
  ]
};
RpcMap[RpcSDKManageUserAddPermission.RpcSDKManageUserAddPermissionMethod] = {
  rpc: RpcSDKManageUserAddPermission.RpcSDKManageUserAddPermission,
  method: RpcSDKManageUserAddPermission.RpcSDKManageUserAddPermissionMethod,
  type: RpcSDKManageUserAddPermission.RpcSDKManageUserAddPermissionRpcType,
  params: [
    'userId',
    'permissionId'
  ]
};
RpcMap[RpcSDKManageUserDelete.RpcSDKManageUserDeleteMethod] = {
  rpc: RpcSDKManageUserDelete.RpcSDKManageUserDelete,
  method: RpcSDKManageUserDelete.RpcSDKManageUserDeleteMethod,
  type: RpcSDKManageUserDelete.RpcSDKManageUserDeleteRpcType,
  params: [
    'userId'
  ]
};
RpcMap[RpcSDKManageUserDeletePermission.RpcSDKManageUserDeletePermissionMethod] = {
  rpc: RpcSDKManageUserDeletePermission.RpcSDKManageUserDeletePermission,
  method: RpcSDKManageUserDeletePermission.RpcSDKManageUserDeletePermissionMethod,
  type: RpcSDKManageUserDeletePermission.RpcSDKManageUserDeletePermissionRpcType,
  params: [
    'userId',
    'permissionId'
  ]
};
RpcMap[RpcSDKManageUserFreeze.RpcSDKManageUserFreezeMethod] = {
  rpc: RpcSDKManageUserFreeze.RpcSDKManageUserFreeze,
  method: RpcSDKManageUserFreeze.RpcSDKManageUserFreezeMethod,
  type: RpcSDKManageUserFreeze.RpcSDKManageUserFreezeRpcType,
  params: [
    'userId'
  ]
};
RpcMap[RpcSDKManageUserGetPermission.RpcSDKManageUserGetPermissionMethod] = {
  rpc: RpcSDKManageUserGetPermission.RpcSDKManageUserGetPermission,
  method: RpcSDKManageUserGetPermission.RpcSDKManageUserGetPermissionMethod,
  type: RpcSDKManageUserGetPermission.RpcSDKManageUserGetPermissionRpcType,
  params: [
    'userId'
  ]
};
RpcMap[RpcSDKManageUserModifyPassword.RpcSDKManageUserModifyPasswordMethod] = {
  rpc: RpcSDKManageUserModifyPassword.RpcSDKManageUserModifyPassword,
  method: RpcSDKManageUserModifyPassword.RpcSDKManageUserModifyPasswordMethod,
  type: RpcSDKManageUserModifyPassword.RpcSDKManageUserModifyPasswordRpcType,
  params: [
    'userId',
    'oldPassword',
    'newPassword'
  ]
};
RpcMap[RpcSDKManageUserQuery.RpcSDKManageUserQueryMethod] = {
  rpc: RpcSDKManageUserQuery.RpcSDKManageUserQuery,
  method: RpcSDKManageUserQuery.RpcSDKManageUserQueryMethod,
  type: RpcSDKManageUserQuery.RpcSDKManageUserQueryRpcType,
  params: [
    'userId',
    'userName',
    'memberId',
    'organizationId',
    'status',
    'pageIndex',
    'pageCount',
    'sortBy',
    'desc'
  ]
};
RpcMap[RpcSDKManageUserResetLoginPasswordWithSms.RpcSDKManageUserResetLoginPasswordWithSmsMethod] = {
  rpc: RpcSDKManageUserResetLoginPasswordWithSms.RpcSDKManageUserResetLoginPasswordWithSms,
  method: RpcSDKManageUserResetLoginPasswordWithSms.RpcSDKManageUserResetLoginPasswordWithSmsMethod,
  type: RpcSDKManageUserResetLoginPasswordWithSms.RpcSDKManageUserResetLoginPasswordWithSmsRpcType,
  params: [
    'newPassword',
    'verifyCode'
  ]
};
RpcMap[RpcSDKManageUserUnFreeze.RpcSDKManageUserUnFreezeMethod] = {
  rpc: RpcSDKManageUserUnFreeze.RpcSDKManageUserUnFreeze,
  method: RpcSDKManageUserUnFreeze.RpcSDKManageUserUnFreezeMethod,
  type: RpcSDKManageUserUnFreeze.RpcSDKManageUserUnFreezeRpcType,
  params: [
    'userId'
  ]
};

let Vue = window.getVue();
Vue.prototype.$rpc = rpc;

export default RpcMap;
